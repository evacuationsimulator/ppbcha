{"version":3,"sources":["webpack:///./node_modules/terriajs-cesium/Source/Assets/Textures/SkyBox sync ^\\.\\/tycho2t3_80_.*\\.jpg$","webpack:///./packages/terriajs/lib/Map/CesiumSelectionIndicator.js","webpack:///./packages/terriajs/lib/Models/Cesium.js"],"names":["map","./tycho2t3_80_mx.jpg","./tycho2t3_80_my.jpg","./tycho2t3_80_mz.jpg","./tycho2t3_80_px.jpg","./tycho2t3_80_py.jpg","./tycho2t3_80_pz.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Cartesian2","defined","defineProperties","DeveloperError","EasingFunction","knockout","SceneTransforms","selectionIndicatorUrl","screenSpacePos","CesiumSelectionIndicator","cesium","this","_cesium","_screenPositionX","_screenPositionY","_tweens","scene","tweens","_container","viewer","container","position","undefined","showSelection","transform","opacity","track","isVisible","defineProperty","get","computeScreenSpacePosition","result","wgs84ToWindowCoordinates","el","document","createElement","className","appendChild","_selectionIndicatorElement","img","setAttribute","that","update","style","top","left","_subscriptions","push","getObservable","subscribe","prototype","destroy","parentNode","removeChild","forEach","subscription","dispose","screenPosition","containerWidth","clientWidth","containerHeight","clientHeight","indicatorSize","halfSize","x","Math","min","max","y","floor","animateAppear","_selectionIndicatorTween","_selectionIndicatorIsAppearing","cancelTween","add","startObject","scale","rotate","stopObject","duration","easingFunction","EXPONENTIAL_OUT","value","complete","cancel","animateDepart","selectionIndicatorElement","_scene","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","BoundingSphere","BoundingSphereState","Cartesian3","Cartographic","CesiumMath","defaultValue","destroyObject","Ellipsoid","Entity","formatError","getTimestamp","HeadingPitchRange","ImageryLayer","JulianDate","loadWithXhr","Matrix4","Rectangle","sampleTerrain","ScreenSpaceEventType","TaskProcessor","Transforms","when","EventHelper","ImagerySplitDirection","Feature","GlobeOrMap","inherit","pollToPromise","TerriaError","PickedFeatures","ViewerMode","Cesium","terria","_this","stoppedRendering","verboseRendering","canShowSplitter","dataSourceDisplay","_lastClockTime","_lastCameraViewMatrix","_lastCameraMoveTime","_selectionIndicator","_removePostRenderListener","postRender","addEventListener","date","now","equalsEpsilon","camera","viewMatrix","cameraMovedInLastSecond","surface","globe","_surface","tilesWaiting","_tileProvider","ready","_tileLoadQueueHigh","_tileLoadQueueMedium","_tileLoadQueueLow","_debug","tilesWaitingForChildren","clock","shouldAnimate","console","log","useDefaultRenderLoop","clone","feature","selectedFeature","originalEntity","cesiumEntity","state","getBoundingSphere","boundingSphereScratch","DONE","center","getValue","currentTime","bind","_removeInfoBoxCloseListener","_boundNotifyRepaintRequired","notifyRepaintRequired","_pauseMapInteractionCount","imagerySplitPosition","splitPosition","supportsPolylinesOnTerrain","context","depthTexture","screenSpaceEventHandler","setInputAction","pickFromScreenPosition","LEFT_CLICK","canvas","window","PointerEvent","_wheelEvent","onmousewheel","_setViewerResolution","useNativeResolution","resolutionScale","devicePixelRatio","infoBox","viewModel","closeClicked","_clockViewModel","_shouldAnimateSubscription","_currentTimeSubscription","timeline","_selectedFeatureSubscription","selectFeature","_splitterPositionSubscription","_showSplitterSubscription","updateAllItemsForSplitter","_originalLoadWithXhr","load","url","responseType","method","data","headers","deferred","overrideMimeType","preferText","timeout","promise","always","_originalScheduleTask","scheduleTask","parameters","transferableObjects","_originalWorkerMessageSinkRepaint","_worker","onmessage","taskProcessor","event","isDestroyed","eventHelper","renderError","error","raiseEvent","sender","title","message","appName","supportEmail","viewerMode","Leaflet","tileLoadProgressEvent","updateTilesLoadingCount","removeEventListener","removeAll","disposeCommonListeners","cartesian3Scratch","enuToFixedScratch","southwestScratch","southeastScratch","northeastScratch","northwestScratch","southwestCartographicScratch","southeastCartographicScratch","northeastCartographicScratch","northwestCartographicScratch","getCurrentExtent","width","height","centerOfScreen","pickRay","getPickRay","pick","homeView","rectangle","ellipsoid","fovy","frustum","fovx","atan","tan","aspectRatio","cameraOffset","subtract","positionWC","cameraHeight","magnitude","xDistance","yDistance","southwestEnu","southeastEnu","northeastEnu","northwestEnu","enuToFixed","eastNorthUpToFixedFrame","southwest","multiplyByPoint","southeast","northeast","northwest","southwestCartographic","cartesianToCartographic","southeastCartographic","northeastCartographic","northwestCartographic","longitude","TWO_PI","rect","convertLongitudeRange","latitude","getContainer","zoomTo","target","flightDurationSeconds","lastTarget","then","destinationCartesian","getRectangleCameraCoordinates","destination","WGS84","terrainProvider","positions","results","finalDestinationCartographic","finalDestination","cartographicToCartesian","flyTo","entities","isLoading","loadingEvent","defer","removeEvent","zoomToDataSource","readyPromise","boundingSphere","zoomToBoundingSphere","orientation","direction","up","values","boundingSpheres","len","PENDING","FAILED","fromBoundingSpheres","flyToBoundingSphere","pollInterval","modelMatrix","offset","radius","countNumberOfSubItems","item","items","_highlightFeature","captureScreenshot","removeCallback","cesiumCanvas","showSplitter","getContext","drawImage","strokeStyle","baseMapContrastColor","beginPath","moveTo","lineTo","stroke","toDataURL","reject","render","computePositionOnScreen","addAttribution","attribution","frameState","creditDisplay","addDefaultCredit","removeAttribution","removeDefaultCredit","getAllAttribution","_currentFrameCredits","screenCredits","concat","lightboxCredits","credit","html","updateLayerOrderToKeepOnTop","nowViewing","l","imageryLayer","keepOnTop","imageryLayers","raiseToTop","updateLayerOrderAfterReorder","raise","index","itemAbove","j","subItem","n","lower","itemBelow","lowerToBottom","_imageryLayer","adjustDisclaimer","pickFromLocation","latlng","imageryLayerCoords","existingFeatures","pickPosition","fromDegrees","lng","lat","pickPositionCartographic","promises","imageryProvider","_imageryProvider","coords","pickFeatures","level","_buildPickedFeatures","mapInteractionModeStack","pickedFeatures","vectorFeatures","pickVectorFeatures","providerCoords","_attachProviderCoordHooks","pickRasterPromise","pickImageryLayerFeatures","pickedList","drillPick","picked","entityCollection","owner","name","_featureHighlightName","primitive","indexOf","fromEntityCollectionOrEntity","_catalogItem","getFeaturesFromPickResult","apply","pickFeaturesHook","oldPick","featuresPromise","featurePromises","defaultHeight","allFeaturesAvailablePromise","all","allFeatures","features","reduce","resultFeaturesSoFar","imageryLayerFeatures","_createFeatureFromImageryLayerFeature","pickedSide","getSplitterSideForScreenPosition","filter","splitDirection","NONE","otherwise","addImageryProvider","options","errorEvent","onLoadError","show","alpha","clipToRectangle","isRequired","isRequiredForRendering","layerIndex","removeImageryLayer","remove","layer","showImageryLayer","hideImageryLayer","isImageryLayerShown","updateItemForSplitter","_nextLayer","pauseMapInteraction","screenSpaceCameraController","enableInputs","resumeMapInteraction","_this2","setTimeout"],"mappings":"8FAAA,IAAAA,EAAA,CACAC,uBAAA,KACAC,uBAAA,KACAC,uBAAA,KACAC,uBAAA,KACAC,uBAAA,KACAC,uBAAA,MAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAZ,EAAAQ,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAAb,EAAAQ,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAhB,IAEAO,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,wCCxBA,IAAAY,EAAiBV,EAAQ,IAEzBW,EAAcX,EAAQ,GAEtBY,EAAuBZ,EAAQ,IAE/Ba,EAAqBb,EAAQ,IAE7Bc,EAAqBd,EAAQ,KAE7Be,EAAef,EAAQ,IAEvBgB,EAAsBhB,EAAQ,KAE9BiB,EAA4BjB,EAAQ,KAEpCkB,EAAA,IAAAR,EAGAS,EAAA,SAAAC,GAEA,IAAAT,EAAAS,GACA,UAAAP,EAAA,uBAIAQ,KAAAC,QAAAF,EACAC,KAAAE,iBAVA,UAWAF,KAAAG,iBAXA,UAYAH,KAAAI,QAAAL,EAAAM,MAAAC,OACAN,KAAAO,WAAAR,EAAAS,OAAAC,UAMAT,KAAAU,cAAAC,EAMAX,KAAAY,eAAA,EACAZ,KAAAa,UAAA,GACAb,KAAAc,QAAA,EACApB,EAAAqB,MAAAf,KAAA,4GAOAA,KAAAgB,eAAAL,EACAjB,EAAAuB,eAAAjB,KAAA,aACAkB,IAAA,WACA,OAAAlB,KAAAY,eAAAtB,EAAAU,KAAAU,aAgBAV,KAAAmB,2BAAA,SAAAT,EAAAU,GACA,OAAAzB,EAAA0B,yBAAAtB,EAAAM,MAAAK,EAAAU,IAGA,IAAAE,EAAAC,SAAAC,cAAA,OACAF,EAAAG,UAAA,sBAEAzB,KAAAO,WAAAmB,YAAAJ,GAEAtB,KAAA2B,2BAAAL,EACA,IAAAM,EAAAL,SAAAC,cAAA,OACAI,EAAAC,aAAA,MAAAjC,GACAgC,EAAAC,aAAA,UACAD,EAAAC,aAAA,YACAD,EAAAC,aAAA,aACAP,EAAAI,YAAAE,GACA,IAAAE,EAAA9B,KAEA,SAAA+B,IACAT,EAAAU,MAAAC,IAAAH,EAAA3B,iBACAmB,EAAAU,MAAAE,KAAAJ,EAAA5B,iBACAoB,EAAAU,MAAAnB,UAAAiB,EAAAjB,UACAS,EAAAU,MAAAlB,QAAAgB,EAAAhB,QAGAiB,IACA/B,KAAAmC,eAAA,GAEAnC,KAAAmC,eAAAC,KAAA1C,EAAA2C,cAAArC,KAAA,oBAAAsC,UAAAP,IAEA/B,KAAAmC,eAAAC,KAAA1C,EAAA2C,cAAArC,KAAA,oBAAAsC,UAAAP,IAEA/B,KAAAmC,eAAAC,KAAA1C,EAAA2C,cAAArC,KAAA,aAAAsC,UAAAP,IAEA/B,KAAAmC,eAAAC,KAAA1C,EAAA2C,cAAArC,KAAA,WAAAsC,UAAAP,KAGAjC,EAAAyC,UAAAC,QAAA,WACAxC,KAAA2B,2BAAAc,WAAAC,YAAA1C,KAAA2B,4BAEA3B,KAAAmC,eAAAQ,QAAA,SAAAC,GACAA,EAAAC,aASA/C,EAAAyC,UAAAR,OAAA,WACA,GAAA/B,KAAAY,eAAAtB,EAAAU,KAAAU,UAAA,CACA,IAAAoC,EAAA9C,KAAAmB,2BAAAnB,KAAAU,SAAAb,GAEA,GAAAP,EAAAwD,GAGK,CACL,IAAArC,EAAAT,KAAAO,WACAwC,EAAAtC,EAAAuC,YACAC,EAAAxC,EAAAyC,aACAC,EAAAnD,KAAA2B,2BAAAqB,YACAI,EAAA,GAAAD,EACAL,EAAAO,EAAAC,KAAAC,IAAAD,KAAAE,IAAAV,EAAAO,GAAAF,GAAAJ,EAAAI,GAAAC,EACAN,EAAAW,EAAAH,KAAAC,IAAAD,KAAAE,IAAAV,EAAAW,GAAAN,GAAAF,EAAAE,GAAAC,EACApD,KAAAE,iBAAAoD,KAAAI,MAAAZ,EAAAO,EAAA,UACArD,KAAAG,iBAAAmD,KAAAI,MAAAZ,EAAAW,EAAA,eAXAzD,KAAAE,iBA7GA,UA8GAF,KAAAG,iBA9GA,YAiIAL,EAAAyC,UAAAoB,cAAA,WACA,GAAArE,EAAAU,KAAA4D,0BAAA,CACA,GAAA5D,KAAA6D,+BAEA,OAGA7D,KAAA4D,yBAAAE,cAEA9D,KAAA4D,8BAAAjD,EAGAX,KAAA6D,gCAAA,EACA,IAAA/B,EAAA9B,KACAA,KAAA4D,yBAAA5D,KAAAI,QAAA2D,IAAA,CACAC,YAAA,CACAC,MAAA,EACAnD,QAAA,EACAoD,QAAA,KAEAC,WAAA,CACAF,MAAA,EACAnD,QAAA,EACAoD,OAAA,GAEAE,SAAA,GACAC,eAAA5E,EAAA6E,gBACAvC,OAAA,SAAAwC,GACAzC,EAAAhB,QAAAyD,EAAAzD,QACAgB,EAAAjB,UAAA,SAAA0D,EAAAN,MAAA,YAAAM,EAAAL,OAAA,QAEAM,SAAA,WACA1C,EAAA8B,8BAAAjD,GAEA8D,OAAA,WACA3C,EAAA8B,8BAAAjD,MASAb,EAAAyC,UAAAmC,cAAA,WACA,GAAApF,EAAAU,KAAA4D,0BAAA,CACA,IAAA5D,KAAA6D,+BAEA,OAGA7D,KAAA4D,yBAAAE,cAEA9D,KAAA4D,8BAAAjD,EAGAX,KAAA6D,gCAAA,EACA,IAAA/B,EAAA9B,KACAA,KAAA4D,yBAAA5D,KAAAI,QAAA2D,IAAA,CACAC,YAAA,CACAC,MAAA,EACAnD,QAAA,GAEAqD,WAAA,CACAF,MAAA,IACAnD,QAAA,GAEAsD,SAAA,GACAC,eAAA5E,EAAA6E,gBACAvC,OAAA,SAAAwC,GACAzC,EAAAhB,QAAAyD,EAAAzD,QACAgB,EAAAjB,UAAA,SAAA0D,EAAAN,MAAA,kBAEAO,SAAA,WACA1C,EAAA8B,8BAAAjD,GAEA8D,OAAA,WACA3C,EAAA8B,8BAAAjD,MAKApB,EAAAO,EAAAyC,UAAA,CAOA9B,UAAA,CACAS,IAAA,WACA,OAAAlB,KAAAO,aAUAoE,0BAAA,CACAzD,IAAA,WACA,OAAAlB,KAAA2B,6BAUAtB,MAAA,CACAa,IAAA,WACA,OAAAlB,KAAA4E,WAYAzF,EAAAC,QAAAU,oCCjRA,SAAA+E,EAAAC,GAAkC,OAMlC,SAAAA,GAAkC,GAAAC,MAAAC,QAAAF,GAAA,CAA0B,QAAAG,EAAA,EAAAC,EAAA,IAAAH,MAAAD,EAAAK,QAA8CF,EAAAH,EAAAK,OAAgBF,IAAOC,EAAAD,GAAAH,EAAAG,GAAoB,OAAAC,GANnHE,CAAAN,IAIlC,SAAAO,GAAiC,GAAAC,OAAAC,YAAAtG,OAAAoG,IAAA,uBAAApG,OAAAsD,UAAAiD,SAAAC,KAAAJ,GAAA,OAAAN,MAAAW,KAAAL,GAJCM,CAAAb,IAElC,WAA+B,UAAAc,UAAA,mDAFGC,GAQlC,IAAAC,EAAqBnH,EAAQ,IAE7BoH,EAA0BpH,EAAQ,IAElCU,EAAiBV,EAAQ,IAEzBqH,EAAiBrH,EAAQ,IAEzBsH,EAAmBtH,EAAQ,IAE3BuH,EAAiBvH,EAAQ,IAEzBwH,EAAmBxH,EAAQ,GAE3BW,EAAcX,EAAQ,GAEtByH,EAAoBzH,EAAQ,IAE5Ba,EAAqBb,EAAQ,IAE7B0H,EAAgB1H,EAAQ,IAExB2H,EAAa3H,EAAQ,KAErB4H,EAAkB5H,EAAQ,KAE1B6H,EAAmB7H,EAAQ,KAE3B8H,EAAwB9H,EAAQ,KAEhC+H,EAAmB/H,EAAQ,KAE3BgI,EAAiBhI,EAAQ,IAEzBe,EAAef,EAAQ,IAEvBiI,EAAkBjI,EAAQ,KAE1BkI,EAAclI,EAAQ,IAEtBmI,EAAgBnI,EAAQ,IAExBoI,EAAoBpI,EAAQ,KAE5BgB,EAAsBhB,EAAQ,KAE9BqI,EAA2BrI,EAAQ,KAEnCsI,EAAoBtI,EAAQ,KAE5BuI,EAAiBvI,EAAQ,IAEzBwI,EAAWxI,EAAQ,IAEnByI,EAAkBzI,EAAQ,KAE1B0I,EAA4B1I,EAAQ,KAEpCmB,EAA+BnB,EAAQ,MAEvC2I,EAAc3I,EAAQ,KAEtB4I,EAAiB5I,EAAQ,KAEzB6I,EAAc7I,EAAQ,IAEtB8I,EAAoB9I,EAAQ,KAE5B+I,EAAkB/I,EAAQ,IAE1BgJ,EAAqBhJ,EAAQ,KAE7BiJ,EAAiBjJ,EAAQ,KAazBkJ,EAAA,SAAAC,EAAAtH,GACA,IAAAuH,EAAA/H,KAEAuH,EAAA9B,KAAAzF,KAAA8H,GAMA9H,KAAAQ,SAMAR,KAAAK,MAAAG,EAAAH,MAMAL,KAAAgI,kBAAA,EAMAhI,KAAAiI,kBAAA,EAMAjI,KAAAkI,iBAAA,EAMAlI,KAAAmI,uBAAAxH,EACAX,KAAAoI,eAAA,IAAAzB,EAAA,KACA3G,KAAAqI,sBAAA,IAAAxB,EACA7G,KAAAsI,oBAAA,EACAtI,KAAAuI,oBAAA,IAAAzI,EAAAE,MACAA,KAAAwI,0BAAAxI,KAAAK,MAAAoI,WAAAC,iBA28BA,SAAA3I,EAAA4I,GAMA,IAAAC,EAAApC,IACAnG,EAAAN,EAAAM,MAEAwG,EAAAgC,cAAA9I,EAAAsI,sBAAAhI,EAAAyI,OAAAC,WAAA,QACAhJ,EAAAuI,oBAAAM,GAGA,IAAAI,EAAAJ,EAAA7I,EAAAuI,oBAAA,IACAW,EAAA5I,EAAA6I,MAAAC,SACAC,GAAAH,EAAAI,cAAAC,OAAAL,EAAAM,mBAAApE,OAAA,GAAA8D,EAAAO,qBAAArE,OAAA,GAAA8D,EAAAQ,kBAAAtE,OAAA,GAAA8D,EAAAS,OAAAC,wBAAA,EAEAX,GAAAI,GAAArJ,EAAAS,OAAAoJ,MAAAC,eAAA,IAAA9J,EAAAM,MAAAC,OAAA6E,SACApF,EAAAkI,kBACA6B,QAAAC,IAAA,wBAAAvD,KAGAzG,EAAAS,OAAAwJ,sBAAA,EACAjK,EAAAiI,kBAAA,GAGAnB,EAAAoD,MAAA5J,EAAAyI,OAAAC,WAAAhJ,EAAAsI,uBACA,IAAA6B,EAAAnK,EAAA+H,OAAAqC,gBAEA,GAAA7K,EAAA4K,GAAA,CACA,IAAAxJ,EAEA,GAAApB,EAAAS,EAAAoI,mBAAA,CACA,IAAAiC,EAAA9K,EAAA4K,EAAAG,cAAAH,EAAAG,aAAAH,EACAI,EAAAvK,EAAAoI,kBAAAoC,kBAAAH,GAAA,EAAAI,GAEAF,IAAAvE,EAAA0E,OACA/J,EAAAsF,EAAAiE,MAAAO,EAAAE,UAIApL,EAAAoB,IAAApB,EAAA4K,EAAAxJ,YACAA,EAAAwJ,EAAAxJ,SAAAiK,SAAA5K,EAAA+H,OAAA8B,MAAAgB,cAGAtL,EAAAoB,KACAX,EAAAwI,oBAAA7H,YAIAX,EAAAwI,oBAAAxG,UA7/BA8I,UAAAlK,EAAAX,OACAA,KAAA8K,iCAAAnK,EACAX,KAAA+K,4BAAA/K,KAAAgL,sBAAAH,KAAA7K,MACAA,KAAAiL,0BAAA,EACAjL,KAAAK,MAAA6K,qBAAAlL,KAAA8H,OAAAqD,cACAnL,KAAAoL,2BAAApL,KAAAK,MAAAgL,QAAAC,aAEA9K,EAAA+K,wBAAAC,eAAA,SAAA3M,GACAmB,KAAAyL,uBAAA5M,EAAA6B,WACGmK,KAAA7K,MAAAgH,EAAA0E,YAEH,IAAAC,EAAA3L,KAAAQ,OAAAmL,OAiDA,GAhDAA,EAAAjD,iBAAA,YAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,YAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,UAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,aAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,WAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,YAAA1I,KAAA+K,6BAAA,GAEAzL,EAAAsM,OAAAC,gBACAF,EAAAjD,iBAAA,cAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,YAAA1I,KAAA+K,6BAAA,GACAY,EAAAjD,iBAAA,cAAA1I,KAAA+K,6BAAA,IAIA/K,KAAA8L,iBAAAnL,EAEA,YAAAgL,EAEA3L,KAAA8L,YAAA,QACGxM,EAAAiC,SAAAwK,cAEH/L,KAAA8L,YAAA,aAGA9L,KAAA8L,YAAA,iBAGAH,EAAAjD,iBAAA1I,KAAA8L,YAAA9L,KAAA+K,6BAAA,GACAa,OAAAlD,iBAAA,SAAA1I,KAAA+K,6BAAA,GAEA/K,KAAAgM,qBAAA,WAIAjE,EAAAD,OAAAmE,sBACAlE,EAAAvH,OAAA0L,gBAAA,EAAAN,OAAAO,mBAIAnM,KAAAgM,uBAEAJ,OAAAlD,iBAAA,SAAA1I,KAAAgM,sBAAA,GAGA1M,EAAAU,KAAAQ,OAAA4L,WACApM,KAAA8K,4BAAA9K,KAAAQ,OAAA4L,QAAAC,UAAAC,aAAA5D,iBAAA1I,KAAA+K,8BAGAzL,EAAAU,KAAAQ,OAAA+L,iBAAA,CACA,IAAA3C,EAAA5J,KAAAQ,OAAA+L,gBACAvM,KAAAwM,2BAAA9M,EAAA2C,cAAAuH,EAAA,iBAAAtH,UAAAtC,KAAA+K,6BACA/K,KAAAyM,yBAAA/M,EAAA2C,cAAAuH,EAAA,eAAAtH,UAAAtC,KAAA+K,6BAGAzL,EAAAU,KAAAQ,OAAAkM,WACA1M,KAAAQ,OAAAkM,SAAAhE,iBAAA,UAAA1I,KAAA+K,6BAAA,GAGA/K,KAAA2M,6BAAAjN,EAAA2C,cAAArC,KAAA8H,OAAA,mBAAAxF,UAAA,WACAsK,GAAA5M,OACGA,MACHA,KAAA6M,8BAAAnN,EAAA2C,cAAArC,KAAA8H,OAAA,iBAAAxF,UAAA,WACAtC,KAAAK,QACAL,KAAAK,MAAA6K,qBAAAlL,KAAA8H,OAAAqD,cACAnL,KAAAgL,0BAEGhL,MACHA,KAAA8M,0BAAApN,EAAA2C,cAAAyF,EAAA,gBAAAxF,UAAA,WACAtC,KAAA+M,6BACG/M,MAEH,IAAA8B,EAAA9B,KACAA,KAAAgN,qBAAApG,EAAAqG,KAEArG,EAAAqG,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAH,EAAAI,QAAAC,OAAA9L,EAAAiJ,6BAEAjJ,EAAAkL,qBAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAIA1N,KAAA6N,sBAAA5G,EAAA1E,UAAAuL,aAEA7G,EAAA1E,UAAAuL,aAAA,SAAAC,EAAAC,GACA,IAAA5M,EAAAU,EAAA+L,sBAAApI,KAAAzF,KAAA+N,EAAAC,GAEA,IAAA1O,EAAAU,KAAAiO,mCAAA,CACAjO,KAAAiO,kCAAAjO,KAAAkO,QAAAC,UACA,IAAAC,EAAApO,KAEAA,KAAAkO,QAAAC,UAAA,SAAAE,GACAD,EAAAH,kCAAAI,GAEAvM,EAAAwM,eACAF,EAAAF,QAAAC,UAAAC,EAAAH,kCACAG,EAAAH,uCAAAtN,GAEAmB,EAAAkJ,yBAKA,OAAA5J,GAGApB,KAAAuO,YAAA,IAAAnH,EAEApH,KAAAuO,YAAAxK,IAAA/D,KAAAK,MAAAmO,YAAA,SAAAnO,EAAAoO,GACAzO,KAAA8H,OAAA2G,MAAAC,WAAA,IAAAhH,EAAA,CACAiH,OAAA3O,KACA4O,MAAA,wBACAC,QAAA,iFACA/G,EAAAgH,QAAA,oNAEAhH,EAAAiH,aAAA,KAAAjH,EAAAiH,aAAA,8DACAxI,EAAAkI,GAAA,YAEAzO,KAAA8H,OAAAkH,WAAApH,EAAAqH,SACGjP,MACHA,KAAAuO,YAAAxK,IAAA/D,KAAAK,MAAA6I,MAAAgG,sBAAAlP,KAAAmP,wBAAAtE,KAAA7K,OACA4M,GAAA5M,OAGAwH,EAAAD,EAAAM,GAEAA,EAAAtF,UAAAC,QAAA,WAuEA,OAtEAlD,EAAAU,KAAAuI,uBACAvI,KAAAuI,oBAAA/F,UAEAxC,KAAAuI,yBAAA5H,GAGArB,EAAAU,KAAAwI,6BACAxI,KAAAwI,4BAEAxI,KAAAwI,+BAAA7H,GAGArB,EAAAU,KAAA8K,8BACA9K,KAAA8K,8BAGAxL,EAAAU,KAAAwM,8BACAxM,KAAAwM,2BAAA3J,UAEA7C,KAAAwM,gCAAA7L,GAGArB,EAAAU,KAAAyM,4BACAzM,KAAAyM,yBAAA5J,UAEA7C,KAAAyM,8BAAA9L,GAGArB,EAAAU,KAAAQ,OAAAkM,WACA1M,KAAAQ,OAAAkM,SAAA0C,oBAAA,UAAApP,KAAA+K,6BAAA,GAGAzL,EAAAU,KAAA2M,gCACA3M,KAAA2M,6BAAA9J,UAEA7C,KAAA2M,kCAAAhM,GAGArB,EAAAU,KAAA6M,iCACA7M,KAAA6M,8BAAAhK,UAEA7C,KAAA6M,mCAAAlM,GAGArB,EAAAU,KAAA8M,6BACA9M,KAAA8M,0BAAAjK,UAEA7C,KAAA8M,+BAAAnM,GAGAX,KAAAQ,OAAAmL,OAAAyD,oBAAA,YAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,YAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,UAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,aAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,WAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,YAAApP,KAAA+K,6BAAA,GAEAzL,EAAAsM,OAAAC,gBACA7L,KAAAQ,OAAAmL,OAAAyD,oBAAA,cAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,YAAApP,KAAA+K,6BAAA,GACA/K,KAAAQ,OAAAmL,OAAAyD,oBAAA,cAAApP,KAAA+K,6BAAA,IAGA/K,KAAAQ,OAAAmL,OAAAyD,oBAAApP,KAAA8L,YAAA9L,KAAA+K,6BAAA,GACAa,OAAAwD,oBAAA,SAAApP,KAAA+K,6BAAA,GACAa,OAAAwD,oBAAA,SAAApP,KAAAgM,sBAAA,GACApF,EAAAqG,KAAAjN,KAAAgN,qBACA/F,EAAA1E,UAAAuL,aAAA9N,KAAA6N,sBACA7N,KAAAuO,YAAAc,YACA9H,EAAA+H,uBAAAtP,MACAoG,EAAApG,OAGA6H,EAAAtF,UAAA+L,YAAA,WACA,UAGA,IAAAiB,EAAA,IAAAvJ,EACAwJ,EAAA,IAAA3I,EACA4I,EAAA,IAAAzJ,EACA0J,EAAA,IAAA1J,EACA2J,EAAA,IAAA3J,EACA4J,EAAA,IAAA5J,EACA6J,EAAA,IAAA5J,EACA6J,EAAA,IAAA7J,EACA8J,EAAA,IAAA9J,EACA+J,EAAA,IAAA/J,EAMA4B,EAAAtF,UAAA0N,iBAAA,WACA,IAAA5P,EAAAL,KAAAK,MACAyI,EAAAzI,EAAAyI,OACAoH,EAAA7P,EAAAsL,OAAA3I,YACAmN,EAAA9P,EAAAsL,OAAAzI,aACAkN,EAAA,IAAA/Q,EAAA6Q,EAAA,EAAAC,EAAA,GACAE,EAAAhQ,EAAAyI,OAAAwH,WAAAF,GACA1F,EAAArK,EAAA6I,MAAAqH,KAAAF,EAAAhQ,GAEA,IAAAf,EAAAoL,GAEA,OAAA1K,KAAA8H,OAAA0I,SAAAC,UAGA,IAAAC,EAAA1Q,KAAAK,MAAA6I,MAAAwH,UACAC,EAAA,GAAAtQ,EAAAyI,OAAA8H,QAAAD,KACAE,EAAAvN,KAAAwN,KAAAxN,KAAAyN,IAAAJ,GAAAtQ,EAAAyI,OAAA8H,QAAAI,aACAC,EAAAjL,EAAAkL,SAAApI,EAAAqI,WAAAzG,EAAA6E,GACA6B,EAAApL,EAAAqL,UAAAJ,GACAK,EAAAF,EAAA9N,KAAAyN,IAAAF,GACAU,EAAAH,EAAA9N,KAAAyN,IAAAJ,GACAa,EAAA,IAAAxL,GAAAsL,GAAAC,EAAA,GACAE,EAAA,IAAAzL,EAAAsL,GAAAC,EAAA,GACAG,EAAA,IAAA1L,EAAAsL,EAAAC,EAAA,GACAI,EAAA,IAAA3L,GAAAsL,EAAAC,EAAA,GACAK,EAAA1K,EAAA2K,wBAAAnH,EAAAgG,EAAAlB,GACAsC,EAAAjL,EAAAkL,gBAAAH,EAAAJ,EAAA/B,GACAuC,EAAAnL,EAAAkL,gBAAAH,EAAAH,EAAA/B,GACAuC,EAAApL,EAAAkL,gBAAAH,EAAAF,EAAA/B,GACAuC,EAAArL,EAAAkL,gBAAAH,EAAAD,EAAA/B,GACAuC,EAAAzB,EAAA0B,wBAAAN,EAAAjC,GACAwC,EAAA3B,EAAA0B,wBAAAJ,EAAAlC,GACAwC,EAAA5B,EAAA0B,wBAAAH,EAAAlC,GACAwC,EAAA7B,EAAA0B,wBAAAF,EAAAlC,GAEAqC,EAAAG,UAAAL,EAAAK,YACAH,EAAAG,WAAAtM,EAAAuM,QAGAH,EAAAE,UAAAD,EAAAC,YACAF,EAAAE,WAAAtM,EAAAuM,QAGA,IAAAC,EAAA,IAAA5L,EAAAZ,EAAAyM,sBAAArP,KAAAC,IAAA4O,EAAAK,UAAAD,EAAAC,YAAAlP,KAAAC,IAAA4O,EAAAS,SAAAP,EAAAO,UAAA1M,EAAAyM,sBAAArP,KAAAE,IAAA8O,EAAAE,UAAAH,EAAAG,YAAAlP,KAAAE,IAAA8O,EAAAM,SAAAL,EAAAK,WAEA,OADAF,EAAAhI,SACAgI,GAQA7K,EAAAtF,UAAAsQ,aAAA,WACA,OAAA7S,KAAAQ,OAAAC,WAUAoH,EAAAtF,UAAAuQ,OAAA,SAAAC,EAAAC,GACA,IAAA1T,EAAAyT,GACA,UAAAvT,EAAA,uBAGAwT,EAAA7M,EAAA6M,EAAA,GACA,IAAAlR,EAAA9B,KAEA,OADA8B,EAAAmR,WAAAF,EACA5L,IAAA+L,KAAA,WACA,GAAAH,aAAAjM,EAAA,CACA,IAAAgC,EAAAhH,EAAAzB,MAAAyI,OAEAqK,EAAArK,EAAAsK,8BAAAL,GACAM,EAAAhN,EAAAiN,MAAAlB,wBAAAe,GACAI,EAAAzR,EAAAzB,MAAA6I,MAAAqK,gBAGAC,EAAA,CAAA1M,EAAA4D,OAAAqI,IAEA,OAAAhM,EAAAwM,EAJA,EAIAC,GAAAN,KAAA,SAAAO,GACA,GAAA3R,EAAAmR,aAAAF,EAAA,CAKA,IAAAW,EAAA,CACAlB,UAAAa,EAAAb,UACAI,SAAAS,EAAAT,SACAzC,OAAAkD,EAAAlD,OAAAsD,EAAA,GAAAtD,QAEAwD,EAAAtN,EAAAiN,MAAAM,wBAAAF,GACA5K,EAAA+K,MAAA,CACAzP,SAAA4O,EACAK,YAAAM,OAGK,GAAArU,EAAAyT,EAAAe,UAAA,CAEL,GAAAf,EAAAgB,WAAAzU,EAAAyT,EAAAiB,cAAA,CACA,IAAAzG,EAAApG,EAAA8M,QACAC,EAAAnB,EAAAiB,aAAAtL,iBAAA,WACAwL,IACA3G,EAAArO,YAEA,OAAAqO,EAAAI,QAAAuF,KAAA,WACA,GAAApR,EAAAmR,aAAAF,EAIA,OAAAoB,EAAArS,EAAAiR,EAAAC,KAIA,OAAAmB,EAAArS,EAAAiR,GACK,OAAAzT,EAAAyT,EAAAqB,cACLrB,EAAAqB,aAAAlB,KAAA,WACA5T,EAAAyT,EAAAsB,iBAAAvS,EAAAmR,aAAAF,GACAuB,GAAAxS,EAAAiR,EAAAC,KAGK1T,EAAAyT,EAAAsB,gBACLC,GAAAxS,EAAAiR,QACKzT,EAAAyT,EAAArS,UACLoB,EAAAzB,MAAAyI,OAAA+K,MAAA,CACAzP,SAAA4O,EACAK,YAAAN,EAAArS,SACA6T,YAAA,CACAC,UAAAzB,EAAAyB,UACAC,GAAA1B,EAAA0B,MAIA3S,EAAAzB,MAAAyI,OAAA+K,MAAA,CACAzP,SAAA4O,EACAK,YAAAN,EAAAtC,eAGGyC,KAAA,WACHpR,EAAAkJ,2BAIA,IAAAR,EAAA,IAAA1E,EAEA,SAAAqO,EAAApU,EAAAgT,EAAAC,GACA,OAAAvL,EAAA,WAKA,IAJA,IAAAU,EAAApI,EAAAoI,kBACA2L,EAAAf,EAAAe,SAAAY,OACAC,EAAA,GAEA1P,EAAA,EAAA2P,EAAAd,EAAA3O,OAA0CF,EAAA2P,EAAS3P,IAAA,CACnD,IAAAqF,EAAAvE,EAAA8O,QAEA,IACAvK,EAAAnC,EAAAoC,kBAAAuJ,EAAA7O,IAAA,EAAAuF,GACO,MAAA3L,IAEP,GAAAyL,IAAAvE,EAAA8O,QACA,SACOvK,IAAAvE,EAAA+O,QACPH,EAAAvS,KAAA0D,EAAAmE,MAAAO,IAIA,IAAA6J,EAAAvO,EAAAiP,oBAAAJ,GAIA,OAHA5U,EAAAM,MAAAyI,OAAAkM,oBAAAX,EAAA,CACAjQ,SAAA4O,KAEA,GACG,CACHiC,aAAA,IACAvH,QAAA,MAIA,SAAA4G,GAAAvU,EAAAgT,EAAAC,GACA,IAAAqB,EAAAtB,EAAAsB,eACAa,EAAAnC,EAAAmC,YAEAA,IACAb,EAAAvO,EAAAjF,UAAAwT,EAAAa,IAGAnV,EAAAM,MAAAyI,OAAAkM,oBAAAX,EAAA,CACAc,OAAA,IAAA1O,EAAA,MAAA4N,EAAAe,QACAhR,SAAA4O,IAyHA,SAAAqC,GAAAC,GACA,OAAAhW,EAAAgW,EAAAC,OACAD,EAAAC,MAAApQ,OAEA,EAgeA,SAAAyH,GAAA7M,GACA,IAAAmK,EAAAnK,EAAA+H,OAAAqC,gBAEApK,EAAAyV,kBAAAtL,GAEA5K,EAAA4K,IAAA5K,EAAA4K,EAAAxJ,WACAX,EAAAwI,oBAAA7H,SAAAwJ,EAAAxJ,SAAAiK,SAAA5K,EAAA+H,OAAA8B,MAAAgB,aAEA7K,EAAAwI,oBAAA5E,iBAEA5D,EAAAwI,oBAAA7D,gBAGA3E,EAAAwI,oBAAAxG,SAjmBA8F,EAAAtF,UAAAkT,kBAAA,WACA,IAAAlI,EAAApG,EAAA8M,QACAyB,EAAA1V,KAAAK,MAAAoI,WAAAC,iBAAA,WACAgN,IAEA,IACA,IAAAC,EAAA3V,KAAAK,MAAAsL,OAEAA,EAAAgK,EAEA,GAAA3V,KAAA8H,OAAA8N,aAAA,EACAjK,EAAApK,SAAAC,cAAA,WACA0O,MAAAyF,EAAAzF,MACAvE,EAAAwE,OAAAwF,EAAAxF,OACA,IAAA9E,EAAAM,EAAAkK,WAAA,MACAxK,EAAAyK,UAAAH,EAAA,KACA,IAAAtS,EAAArD,KAAA8H,OAAAqD,cAAAwK,EAAAzF,MACA7E,EAAA0K,YAAA/V,KAAA8H,OAAAkO,qBACA3K,EAAA4K,YACA5K,EAAA6K,OAAA7S,EAAA,GACAgI,EAAA8K,OAAA9S,EAAAsS,EAAAxF,QACA9E,EAAA+K,SAGA7I,EAAArO,QAAAyM,EAAA0K,UAAA,cACK,MAAAxX,GACL0O,EAAA+I,OAAAzX,KAEGmB,MAEH,OADAA,KAAAK,MAAAkW,OAAAvW,KAAA8H,OAAA8B,MAAAgB,aACA2C,EAAAI,SAOA9F,EAAAtF,UAAAyI,sBAAA,WACAhL,KAAAiI,mBAAAjI,KAAAQ,OAAAwJ,sBACAF,QAAAC,IAAA,wBAAAvD,KAGAxG,KAAAsI,oBAAA9B,IACAxG,KAAAQ,OAAAwJ,sBAAA,GAUAnC,EAAAtF,UAAAiU,wBAAA,SAAA9V,EAAAU,GACA,OAAAzB,EAAA0B,yBAAArB,KAAAK,MAAAK,EAAAU,IAQAyG,EAAAtF,UAAAkU,eAAA,SAAAC,GACAA,GACA1W,KAAAK,MAAAsW,WAAAC,cAAAC,iBAAAH,IASA7O,EAAAtF,UAAAuU,kBAAA,SAAAJ,GACAA,GACA1W,KAAAK,MAAAsW,WAAAC,cAAAG,oBAAAL,IASA7O,EAAAtF,UAAAyU,kBAAA,WAGA,OAFAhX,KAAAK,MAAAsW,WAAAC,cAAAK,qBAAAC,cAAAxC,OAAAyC,OAAAnX,KAAAK,MAAAsW,WAAAC,cAAAK,qBAAAG,gBAAA1C,QAEA1W,IAAA,SAAAqZ,GACA,OAAAA,EAAAC,QAQAzP,EAAAtF,UAAAgV,4BAAA,WAKA,IAHA,IAAAhC,EAAAvV,KAAA8H,OAAA0P,WAAAjC,MACAlV,EAAAL,KAAAK,MAEAoX,EAAAlC,EAAApQ,OAAA,EAAgCsS,GAAA,EAAQA,IACxClC,EAAAkC,GAAAC,cAAAnC,EAAAkC,GAAAE,WACAtX,EAAAuX,cAAAC,WAAAtC,EAAAkC,GAAAC,eAKA7P,EAAAtF,UAAAuV,6BAAA,aAkBAjQ,EAAAtF,UAAAwV,MAAA,SAAAC,GACA,IAAAzC,EAAAvV,KAAA8H,OAAA0P,WAAAjC,MACAD,EAAAC,EAAAyC,GACAC,EAAA1C,EAAAyC,EAAA,GAEA,GAAA1Y,EAAA2Y,EAAA1C,QAAAjW,EAAA2Y,EAAAP,cAAA,CAUA,IACAzS,EAAAiT,EAAAC,EADAC,EAAA/C,GAAA4C,GAGA,GAAA3Y,EAAAgW,EAAAC,OACA,IAAAtQ,EAAAqQ,EAAAC,MAAApQ,OAAA,EAAmCF,GAAA,IAAQA,EAG3C,GAFAkT,EAAA7C,EAAAC,MAAAtQ,GAEA3F,EAAA6Y,EAAAT,cACA,IAAAQ,EAAA,EAAmBA,EAAAE,IAAOF,EAC1BlY,KAAAK,MAAAuX,cAAAG,MAAAI,EAAAT,cAMA,GAAApY,EAAAgW,EAAAoC,cAIA,IAAAQ,EAAA,EAAaA,EAAAE,IAAOF,EACpBlY,KAAAK,MAAAuX,cAAAG,MAAAzC,EAAAoC,gBAUA7P,EAAAtF,UAAA8V,MAAA,SAAAL,GACA,IAAAzC,EAAAvV,KAAA8H,OAAA0P,WAAAjC,MACAD,EAAAC,EAAAyC,GACAM,EAAA/C,EAAAyC,EAAA,GAEA,GAAA1Y,EAAAgZ,EAAA/C,QAAAjW,EAAAgZ,EAAAZ,cAAA,CAKA,IACAzS,EAAAiT,EAAAC,EADAC,EAAA/C,GAAAiD,GAGA,GAAAhZ,EAAAgW,EAAAC,OACA,IAAAtQ,EAAA,EAAeA,EAAAqQ,EAAAC,MAAApQ,SAAuBF,EAGtC,GAFAkT,EAAA7C,EAAAC,MAAAtQ,GAEA3F,EAAA6Y,EAAAT,cACA,IAAAQ,EAAA,EAAmBA,EAAAE,IAAOF,EAC1BlY,KAAAK,MAAAuX,cAAAS,MAAAF,EAAAT,cAMA,GAAApY,EAAAgW,EAAAoC,cAIA,IAAAQ,EAAA,EAAaA,EAAAE,IAAOF,EACpBlY,KAAAK,MAAAuX,cAAAS,MAAA/C,EAAAoC,gBAUA7P,EAAAtF,UAAAgW,cAAA,SAAAjD,GACA,GAAAhW,EAAAgW,EAAAC,OAGA,QAAAtQ,EAAAqQ,EAAAC,MAAApQ,OAAA,EAAuCF,GAAA,IAAQA,EAAA,CAC/C,IAAAkT,EAAA7C,EAAAC,MAAAtQ,GACAjF,KAAAuY,cAAAJ,GAIA7Y,EAAAgW,EAAAkD,gBAIAxY,KAAA8H,OAAA/H,OAAAM,MAAAuX,cAAAW,cAAAjD,EAAAkD,gBAGA3Q,EAAAtF,UAAAkW,iBAAA,aAUA5Q,EAAAtF,UAAAmW,iBAAA,SAAAC,EAAAC,EAAAC,GAMA,IALA,IAAAC,EAAA9Y,KAAAK,MAAA6I,MAAAwH,UAAAkD,wBAAA3N,EAAA8S,YAAAJ,EAAAK,IAAAL,EAAAM,IAAAN,EAAAxI,SACA+I,EAAA7S,EAAAiN,MAAAlB,wBAAA0G,GACAK,EAAA,GACAvB,EAAA,GAEA3S,EAAAjF,KAAAK,MAAAuX,cAAAzS,OAAA,EAAmDF,GAAA,EAAQA,IAAA,CAC3D,IAAAyS,EAAA1X,KAAAK,MAAAuX,cAAA1W,IAAA+D,GACAmU,EAAA1B,EAAA2B,iBAEA,GAAAD,EAAAlM,KAAA0L,EAAAQ,EAAAlM,KAAA,CACA,IAAAoM,EAAAV,EAAAQ,EAAAlM,KACAiM,EAAA/W,KAAAgX,EAAAG,aAAAD,EAAAjW,EAAAiW,EAAA7V,EAAA6V,EAAAE,MAAAN,EAAA1G,UAAA0G,EAAAtG,WACAgF,EAAAxV,KAAAsV,IAIA,IAAAtW,EAAApB,KAAAyZ,qBAAAb,EAAAE,EAAAD,EAAAM,EAAAvB,EAAAsB,EAAA/I,QAEAuJ,EAAA1Z,KAAA8H,OAAA4R,wBAEApa,EAAAoa,MAAAvU,OAAA,EACAuU,IAAAvU,OAAA,GAAAwU,eAAAvY,EAEApB,KAAA8H,OAAA6R,eAAAvY,GAWAyG,EAAAtF,UAAAkJ,uBAAA,SAAA3I,GACA,IAAAuN,EAAArQ,KAAAK,MAAAyI,OAAAwH,WAAAxN,GACAgW,EAAA9Y,KAAAK,MAAA6I,MAAAqH,KAAAF,EAAArQ,KAAAK,OACA6Y,EAAA7S,EAAAiN,MAAAlB,wBAAA0G,GACAc,EAAA5Z,KAAA6Z,mBAAA/W,GAEAgX,EAAA9Z,KAAA+Z,4BAEAC,EAAAha,KAAAK,MAAAuX,cAAAqC,yBAAA5J,EAAArQ,KAAAK,OAEAe,EAAApB,KAAAyZ,qBAAAK,EAAAhB,EAAAc,EAAA,CAAAI,QAAArZ,EAAAuY,EAAA/I,QAEAuJ,EAAA1Z,KAAA8H,OAAA4R,wBAEApa,EAAAoa,MAAAvU,OAAA,EACAuU,IAAAvU,OAAA,GAAAwU,eAAAvY,EAEApB,KAAA8H,OAAA6R,eAAAvY,GAYAyG,EAAAtF,UAAAsX,mBAAA,SAAA/W,GAKA,IAHA,IAAA8W,EAAA,GACAM,EAAAla,KAAAK,MAAA8Z,UAAArX,GAEAmC,EAAA,EAAiBA,EAAAiV,EAAA/U,SAAuBF,EAAA,CACxC,IAAAmV,EAAAF,EAAAjV,GACAxG,EAAA2b,EAAA3b,GAEA,KAAAA,KAAA4b,kBAAA5b,EAAA4b,iBAAAC,OAAA7b,EAAA4b,iBAAAC,MAAAC,OAAAhT,EAAAiT,uBAQA,IAJAlb,EAAAb,IAAAa,EAAA8a,EAAAK,aACAhc,EAAA2b,EAAAK,UAAAhc,IAGAA,aAAA6H,IAAA,IAAAsT,EAAAc,QAAAjc,GAAA,CACA,IAAAyL,EAAA5C,EAAAqT,6BAAAlc,GACAmb,EAAAxX,KAAA8H,QACK,GAAAkQ,EAAAK,WAAAL,EAAAK,UAAAG,cAAAR,EAAAK,UAAAG,aAAAC,0BAAA,CACL,IAAAzZ,EAAAgZ,EAAAK,UAAAG,aAAAC,0BAAA/X,EAAAsX,GAEAhZ,IACA2D,MAAAC,QAAA5D,GACAwY,EAAAxX,KAAA0Y,MAAAlB,EAAA/U,EAAAzD,IAEAwY,EAAAxX,KAAAhB,KAMA,OAAAwY,GAaA/R,EAAAtF,UAAAwX,0BAAA,WAkBA,IAjBA,IAAAD,EAAA,GAEAiB,EAAA,SAAA3B,EAAA4B,EAAA3X,EAAAI,EAAA+V,EAAAhH,EAAAI,GACA,IAAAqI,EAAAD,EAAAvV,KAAA2T,EAAA/V,EAAAI,EAAA+V,EAAAhH,EAAAI,GAWA,OATAwG,EAAAlM,MACA4M,EAAAV,EAAAlM,KAAA,CACA7J,IACAI,IACA+V,UAIAJ,EAAAG,aAAAyB,EACAC,GAGA/C,EAAA,EAAiBA,EAAAlY,KAAAK,MAAAuX,cAAAzS,OAAqC+S,IAAA,CACtD,IAAAkB,EAAApZ,KAAAK,MAAAuX,cAAA1W,IAAAgX,GAAAkB,gBACAA,EAAAG,aAAAwB,EAAAlQ,UAAAlK,EAAAyY,IAAAG,cAGA,OAAAO,GAmBAjS,EAAAtF,UAAAkX,qBAAA,SAAAK,EAAAhB,EAAAD,EAAAqC,EAAAtD,EAAAuD,GACA,IAAA/Z,EAAA,IAAAuG,EA4CA,OA3CAvG,EAAA0Y,iBACA1Y,EAAA0X,eACA1X,EAAAga,4BAAAjU,EAAAkU,IAAAH,GAAAhI,KAAA,SAAAoI,GACAla,EAAA2S,WAAA,EACA3S,EAAAma,SAAAD,EAAAE,OAAA,SAAAC,EAAAC,EAAAzW,GACA,IAAA3F,EAAAoc,GACA,OAAAD,EAGA,IAAAF,EAAAG,EAAA1d,IAAA,SAAAkM,GAeA,OAdA5K,EAAAsY,KACA1N,EAAAwN,aAAAE,EAAA3S,IAGA3F,EAAA4K,EAAAxJ,YACAwJ,EAAAxJ,SAAA2F,EAAAiN,MAAAlB,wBAAA0G,IAKAxZ,EAAA4K,EAAAxJ,SAAAyP,SAAA,IAAAjG,EAAAxJ,SAAAyP,SACAjG,EAAAxJ,SAAAyP,OAAAgL,GAGAnb,KAAA2b,sCAAAzR,IACOW,KAAA7K,OAEP,GAAAA,KAAA8H,OAAA8N,aAAA,CAEA,IAAA9S,EAAA9C,KAAAwW,wBAAApV,EAAA0X,cACA8C,EAAA5b,KAAA8H,OAAA+T,iCAAA/Y,GACAyY,IAAAO,OAAA,SAAA5R,GACA,IAAA6R,EAAA7R,EAAAwN,aAAAqE,eACA,OAAAA,IAAAH,GAAAG,IAAA1U,EAAA2U,OAIA,OAAAP,EAAAtE,OAAAoE,IACK1Q,KAAA7K,MAAAmG,EAAA0S,EAAA,MACFhO,KAAA7K,OAAAic,UAAA,WACH7a,EAAA2S,WAAA,EACA3S,EAAAqN,MAAA,sDAEArN,GA0BAyG,EAAAtF,UAAA2Z,mBAAA,SAAAC,GACA,IAAA9b,EAAAL,KAAAK,MACA+b,EAAAD,EAAA/C,gBAAAgD,WAEA9c,EAAA8c,IACAA,EAAA1T,iBAAAyT,EAAAE,aAGA,IAAAjb,EAAA,IAAAsF,EAAAyV,EAAA/C,gBAAA,CACAkD,MAAA,EACAC,MAAAJ,EAAArb,QACA2P,UAAA0L,EAAAK,gBAAAL,EAAA1L,eAAA9P,EACA8b,WAAAN,EAAAO,yBAOA,OAFArc,EAAAuX,cAAA7T,IAAA3C,EAAA+a,EAAAQ,YACA3c,KAAAuX,8BACAnW,GAGAyG,EAAAtF,UAAAqa,mBAAA,SAAAT,GACAnc,KAAAK,MACAuX,cAAAiF,OAAAV,EAAAW,QAGAjV,EAAAtF,UAAAwa,iBAAA,SAAAZ,GACAA,EAAAW,MAAAR,MAAA,GAGAzU,EAAAtF,UAAAya,iBAAA,SAAAb,GACAA,EAAAW,MAAAR,MAAA,GAGAzU,EAAAtF,UAAA0a,oBAAA,SAAAd,GACA,OAAAA,EAAAW,MAAAR,MAGAzU,EAAAtF,UAAA2a,sBAAA,SAAA5H,GACAhW,EAAAgW,EAAAyG,iBAAAzc,EAAAgW,EAAAoC,gBAIApC,EAAAxN,OAEA8N,aACAN,EAAAoC,aAAAqE,eAAAzG,EAAAyG,eAEAzG,EAAAoC,aAAAqE,eAAA1U,EAAA2U,KAIA1G,EAAA6H,aACA7H,EAAA6H,WAAApB,eAAAzG,EAAAoC,aAAAqE,gBAGA/b,KAAAgL,0BAGAnD,EAAAtF,UAAA6a,oBAAA,aACApd,KAAAiL,0BAEA,IAAAjL,KAAAiL,4BACAjL,KAAAK,MAAAgd,4BAAAC,cAAA,IAIAzV,EAAAtF,UAAAgb,qBAAA,WACA,IAAAC,EAAAxd,OAEAA,KAAAiL,0BAEA,IAAAjL,KAAAiL,2BACAwS,WAAA,WACA,IAAAD,EAAAvS,4BACAuS,EAAAnd,MAAAgd,4BAAAC,cAAA,IAEK,IAyELne,EAAAC,QAAAyI","file":"0.TerriaMap.js","sourcesContent":["var map = {\n\t\"./tycho2t3_80_mx.jpg\": 1933,\n\t\"./tycho2t3_80_my.jpg\": 1934,\n\t\"./tycho2t3_80_mz.jpg\": 1935,\n\t\"./tycho2t3_80_px.jpg\": 1936,\n\t\"./tycho2t3_80_py.jpg\": 1937,\n\t\"./tycho2t3_80_pz.jpg\": 1938\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1932;","\"use strict\";\n/*global require*/\n\nvar Cartesian2 = require(\"terriajs-cesium/Source/Core/Cartesian2\");\n\nvar defined = require(\"terriajs-cesium/Source/Core/defined\");\n\nvar defineProperties = require(\"terriajs-cesium/Source/Core/defineProperties\");\n\nvar DeveloperError = require(\"terriajs-cesium/Source/Core/DeveloperError\");\n\nvar EasingFunction = require(\"terriajs-cesium/Source/Core/EasingFunction\");\n\nvar knockout = require(\"terriajs-cesium/Source/ThirdParty/knockout\");\n\nvar SceneTransforms = require(\"terriajs-cesium/Source/Scene/SceneTransforms\");\n\nvar selectionIndicatorUrl = require(\"../../wwwroot/images/NM-LocationTarget.svg\");\n\nvar screenSpacePos = new Cartesian2();\nvar offScreen = \"-1000px\";\n\nvar CesiumSelectionIndicator = function CesiumSelectionIndicator(cesium) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(cesium)) {\n    throw new DeveloperError(\"cesium is required.\");\n  } //>>includeEnd('debug')\n\n\n  this._cesium = cesium;\n  this._screenPositionX = offScreen;\n  this._screenPositionY = offScreen;\n  this._tweens = cesium.scene.tweens;\n  this._container = cesium.viewer.container;\n  /**\n   * Gets or sets the world position of the object for which to display the selection indicator.\n   * @type {Cartesian3}\n   */\n\n  this.position = undefined;\n  /**\n   * Gets or sets the visibility of the selection indicator.\n   * @type {Boolean}\n   */\n\n  this.showSelection = true;\n  this.transform = \"\";\n  this.opacity = 1.0;\n  knockout.track(this, [\"position\", \"_screenPositionX\", \"_screenPositionY\", \"_scale\", \"rotate\", \"showSelection\", \"transform\", \"opacity\"]);\n  /**\n   * Gets the visibility of the position indicator.  This can be false even if an\n   * object is selected, when the selected object has no position.\n   * @type {Boolean}\n   */\n\n  this.isVisible = undefined;\n  knockout.defineProperty(this, \"isVisible\", {\n    get: function get() {\n      return this.showSelection && defined(this.position);\n    }\n  });\n  /**\n   * Gets or sets the function for converting the world position of the object to the screen space position.\n   *\n   * @member\n   * @type {SelectionIndicatorViewModel~ComputeScreenSpacePosition}\n   * @default SceneTransforms.wgs84ToWindowCoordinates\n   *\n   * @example\n   * selectionIndicatorViewModel.computeScreenSpacePosition = function(position, result) {\n   *     return Cesium.SceneTransforms.wgs84ToWindowCoordinates(scene, position, result);\n   * };\n   */\n\n  this.computeScreenSpacePosition = function (position, result) {\n    return SceneTransforms.wgs84ToWindowCoordinates(cesium.scene, position, result);\n  };\n\n  var el = document.createElement(\"div\");\n  el.className = \"selection-indicator\";\n\n  this._container.appendChild(el);\n\n  this._selectionIndicatorElement = el;\n  var img = document.createElement(\"img\");\n  img.setAttribute(\"src\", selectionIndicatorUrl);\n  img.setAttribute(\"alt\", \"\");\n  img.setAttribute(\"width\", 50);\n  img.setAttribute(\"height\", 50);\n  el.appendChild(img);\n  var that = this;\n\n  function update() {\n    el.style.top = that._screenPositionY;\n    el.style.left = that._screenPositionX;\n    el.style.transform = that.transform;\n    el.style.opacity = that.opacity;\n  }\n\n  update();\n  this._subscriptions = [];\n\n  this._subscriptions.push(knockout.getObservable(this, \"_screenPositionX\").subscribe(update));\n\n  this._subscriptions.push(knockout.getObservable(this, \"_screenPositionY\").subscribe(update));\n\n  this._subscriptions.push(knockout.getObservable(this, \"transform\").subscribe(update));\n\n  this._subscriptions.push(knockout.getObservable(this, \"opacity\").subscribe(update));\n};\n\nCesiumSelectionIndicator.prototype.destroy = function () {\n  this._selectionIndicatorElement.parentNode.removeChild(this._selectionIndicatorElement);\n\n  this._subscriptions.forEach(function (subscription) {\n    subscription.dispose();\n  });\n};\n/**\n * Updates the view of the selection indicator to match the position and content properties of the view model.\n * This function should be called as part of the render loop.\n */\n\n\nCesiumSelectionIndicator.prototype.update = function () {\n  if (this.showSelection && defined(this.position)) {\n    var screenPosition = this.computeScreenSpacePosition(this.position, screenSpacePos);\n\n    if (!defined(screenPosition)) {\n      this._screenPositionX = offScreen;\n      this._screenPositionY = offScreen;\n    } else {\n      var container = this._container;\n      var containerWidth = container.clientWidth;\n      var containerHeight = container.clientHeight;\n      var indicatorSize = this._selectionIndicatorElement.clientWidth;\n      var halfSize = indicatorSize * 0.5;\n      screenPosition.x = Math.min(Math.max(screenPosition.x, -indicatorSize), containerWidth + indicatorSize) - halfSize;\n      screenPosition.y = Math.min(Math.max(screenPosition.y, -indicatorSize), containerHeight + indicatorSize) - halfSize;\n      this._screenPositionX = Math.floor(screenPosition.x + 0.25) + \"px\";\n      this._screenPositionY = Math.floor(screenPosition.y + 0.25) + \"px\";\n    }\n  }\n};\n/**\n * Animate the indicator to draw attention to the selection.\n */\n\n\nCesiumSelectionIndicator.prototype.animateAppear = function () {\n  if (defined(this._selectionIndicatorTween)) {\n    if (this._selectionIndicatorIsAppearing) {\n      // Already appearing; don't restart the animation.\n      return;\n    }\n\n    this._selectionIndicatorTween.cancelTween();\n\n    this._selectionIndicatorTween = undefined;\n  }\n\n  this._selectionIndicatorIsAppearing = true;\n  var that = this;\n  this._selectionIndicatorTween = this._tweens.add({\n    startObject: {\n      scale: 2.0,\n      opacity: 0.0,\n      rotate: -180\n    },\n    stopObject: {\n      scale: 1.0,\n      opacity: 1.0,\n      rotate: 0\n    },\n    duration: 0.8,\n    easingFunction: EasingFunction.EXPONENTIAL_OUT,\n    update: function update(value) {\n      that.opacity = value.opacity;\n      that.transform = \"scale(\" + value.scale + \") rotate(\" + value.rotate + \"deg)\";\n    },\n    complete: function complete() {\n      that._selectionIndicatorTween = undefined;\n    },\n    cancel: function cancel() {\n      that._selectionIndicatorTween = undefined;\n    }\n  });\n};\n/**\n * Animate the indicator to release the selection.\n */\n\n\nCesiumSelectionIndicator.prototype.animateDepart = function () {\n  if (defined(this._selectionIndicatorTween)) {\n    if (!this._selectionIndicatorIsAppearing) {\n      // Already disappearing, don't restart the animation.\n      return;\n    }\n\n    this._selectionIndicatorTween.cancelTween();\n\n    this._selectionIndicatorTween = undefined;\n  }\n\n  this._selectionIndicatorIsAppearing = false;\n  var that = this;\n  this._selectionIndicatorTween = this._tweens.add({\n    startObject: {\n      scale: 1.0,\n      opacity: 1.0\n    },\n    stopObject: {\n      scale: 1.5,\n      opacity: 0.0\n    },\n    duration: 0.8,\n    easingFunction: EasingFunction.EXPONENTIAL_OUT,\n    update: function update(value) {\n      that.opacity = value.opacity;\n      that.transform = \"scale(\" + value.scale + \") rotate(0deg)\";\n    },\n    complete: function complete() {\n      that._selectionIndicatorTween = undefined;\n    },\n    cancel: function cancel() {\n      that._selectionIndicatorTween = undefined;\n    }\n  });\n};\n\ndefineProperties(CesiumSelectionIndicator.prototype, {\n  /**\n   * Gets the HTML element containing the selection indicator.\n   * @memberof CesiumSelectionIndicator.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function get() {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the HTML element that holds the selection indicator.\n   * @memberof CesiumSelectionIndicator.prototype\n   *\n   * @type {Element}\n   */\n  selectionIndicatorElement: {\n    get: function get() {\n      return this._selectionIndicatorElement;\n    }\n  },\n\n  /**\n   * Gets the scene being used.\n   * @memberof CesiumSelectionIndicator.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function get() {\n      return this._scene;\n    }\n  }\n});\n/**\n * A function that converts the world position of an object to a screen space position.\n * @callback CesiumSelectionIndicator~ComputeScreenSpacePosition\n * @param {Cartesian3} position The position in WGS84 (world) coordinates.\n * @param {Cartesian2} result An object to return the input position transformed to window coordinates.\n * @returns {Cartesian2} The modified result parameter.\n */\n\nmodule.exports = CesiumSelectionIndicator;","\"use strict\";\n/*global require*/\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar BoundingSphere = require(\"terriajs-cesium/Source/Core/BoundingSphere\");\n\nvar BoundingSphereState = require(\"terriajs-cesium/Source/DataSources/BoundingSphereState\");\n\nvar Cartesian2 = require(\"terriajs-cesium/Source/Core/Cartesian2\");\n\nvar Cartesian3 = require(\"terriajs-cesium/Source/Core/Cartesian3\");\n\nvar Cartographic = require(\"terriajs-cesium/Source/Core/Cartographic\");\n\nvar CesiumMath = require(\"terriajs-cesium/Source/Core/Math\");\n\nvar defaultValue = require(\"terriajs-cesium/Source/Core/defaultValue\");\n\nvar defined = require(\"terriajs-cesium/Source/Core/defined\");\n\nvar destroyObject = require(\"terriajs-cesium/Source/Core/destroyObject\");\n\nvar DeveloperError = require(\"terriajs-cesium/Source/Core/DeveloperError\");\n\nvar Ellipsoid = require(\"terriajs-cesium/Source/Core/Ellipsoid\");\n\nvar Entity = require(\"terriajs-cesium/Source/DataSources/Entity\");\n\nvar formatError = require(\"terriajs-cesium/Source/Core/formatError\");\n\nvar getTimestamp = require(\"terriajs-cesium/Source/Core/getTimestamp\");\n\nvar HeadingPitchRange = require(\"terriajs-cesium/Source/Core/HeadingPitchRange\");\n\nvar ImageryLayer = require(\"terriajs-cesium/Source/Scene/ImageryLayer\");\n\nvar JulianDate = require(\"terriajs-cesium/Source/Core/JulianDate\");\n\nvar knockout = require(\"terriajs-cesium/Source/ThirdParty/knockout\");\n\nvar loadWithXhr = require(\"../Core/loadWithXhr\");\n\nvar Matrix4 = require(\"terriajs-cesium/Source/Core/Matrix4\");\n\nvar Rectangle = require(\"terriajs-cesium/Source/Core/Rectangle\");\n\nvar sampleTerrain = require(\"terriajs-cesium/Source/Core/sampleTerrain\");\n\nvar SceneTransforms = require(\"terriajs-cesium/Source/Scene/SceneTransforms\");\n\nvar ScreenSpaceEventType = require(\"terriajs-cesium/Source/Core/ScreenSpaceEventType\");\n\nvar TaskProcessor = require(\"terriajs-cesium/Source/Core/TaskProcessor\");\n\nvar Transforms = require(\"terriajs-cesium/Source/Core/Transforms\");\n\nvar when = require(\"terriajs-cesium/Source/ThirdParty/when\");\n\nvar EventHelper = require(\"terriajs-cesium/Source/Core/EventHelper\");\n\nvar ImagerySplitDirection = require(\"terriajs-cesium/Source/Scene/ImagerySplitDirection\");\n\nvar CesiumSelectionIndicator = require(\"../Map/CesiumSelectionIndicator\");\n\nvar Feature = require(\"./Feature\");\n\nvar GlobeOrMap = require(\"./GlobeOrMap\");\n\nvar inherit = require(\"../Core/inherit\");\n\nvar pollToPromise = require(\"../Core/pollToPromise\");\n\nvar TerriaError = require(\"../Core/TerriaError\");\n\nvar PickedFeatures = require(\"../Map/PickedFeatures\");\n\nvar ViewerMode = require(\"./ViewerMode\");\n/**\n * The Cesium viewer component\n *\n * @alias Cesium\n * @constructor\n * @extends GlobeOrMap\n *\n * @param {Terria} terria The Terria instance.\n * @param {Viewer} viewer The Cesium viewer instance.\n */\n\n\nvar Cesium = function Cesium(terria, viewer) {\n  var _this = this;\n\n  GlobeOrMap.call(this, terria);\n  /**\n   * Gets or sets the Cesium {@link Viewer} instance.\n   * @type {Viewer}\n   */\n\n  this.viewer = viewer;\n  /**\n   * Gets or sets the Cesium {@link Scene} instance.\n   * @type {Scene}\n   */\n\n  this.scene = viewer.scene;\n  /**\n   * Gets or sets whether the viewer has stopped rendering since startup or last set to false.\n   * @type {Boolean}\n   */\n\n  this.stoppedRendering = false;\n  /**\n   * Gets or sets whether to output info to the console when starting and stopping rendering loop.\n   * @type {Boolean}\n   */\n\n  this.verboseRendering = false;\n  /**\n   * Gets or sets whether this viewer _can_ show a splitter.\n   * @type {Boolean}\n   */\n\n  this.canShowSplitter = true;\n  /**\n   * Gets the {@link DataSourceDisplay} used to render a {@link DataSource}.\n   * @type {DataSourceDisplay}\n   */\n\n  this.dataSourceDisplay = undefined;\n  this._lastClockTime = new JulianDate(0, 0.0);\n  this._lastCameraViewMatrix = new Matrix4();\n  this._lastCameraMoveTime = 0;\n  this._selectionIndicator = new CesiumSelectionIndicator(this);\n  this._removePostRenderListener = this.scene.postRender.addEventListener(postRender.bind(undefined, this));\n  this._removeInfoBoxCloseListener = undefined;\n  this._boundNotifyRepaintRequired = this.notifyRepaintRequired.bind(this);\n  this._pauseMapInteractionCount = 0;\n  this.scene.imagerySplitPosition = this.terria.splitPosition;\n  this.supportsPolylinesOnTerrain = this.scene.context.depthTexture; // Handle left click by picking objects from the map.\n\n  viewer.screenSpaceEventHandler.setInputAction(function (e) {\n    this.pickFromScreenPosition(e.position);\n  }.bind(this), ScreenSpaceEventType.LEFT_CLICK); // Force a repaint when the mouse moves or the window changes size.\n\n  var canvas = this.viewer.canvas;\n  canvas.addEventListener(\"mousemove\", this._boundNotifyRepaintRequired, false);\n  canvas.addEventListener(\"mousedown\", this._boundNotifyRepaintRequired, false);\n  canvas.addEventListener(\"mouseup\", this._boundNotifyRepaintRequired, false);\n  canvas.addEventListener(\"touchstart\", this._boundNotifyRepaintRequired, false);\n  canvas.addEventListener(\"touchend\", this._boundNotifyRepaintRequired, false);\n  canvas.addEventListener(\"touchmove\", this._boundNotifyRepaintRequired, false);\n\n  if (defined(window.PointerEvent)) {\n    canvas.addEventListener(\"pointerdown\", this._boundNotifyRepaintRequired, false);\n    canvas.addEventListener(\"pointerup\", this._boundNotifyRepaintRequired, false);\n    canvas.addEventListener(\"pointermove\", this._boundNotifyRepaintRequired, false);\n  } // Detect available wheel event\n\n\n  this._wheelEvent = undefined;\n\n  if (\"onwheel\" in canvas) {\n    // spec event type\n    this._wheelEvent = \"wheel\";\n  } else if (defined(document.onmousewheel)) {\n    // legacy event type\n    this._wheelEvent = \"mousewheel\";\n  } else {\n    // older Firefox\n    this._wheelEvent = \"DOMMouseScroll\";\n  }\n\n  canvas.addEventListener(this._wheelEvent, this._boundNotifyRepaintRequired, false);\n  window.addEventListener(\"resize\", this._boundNotifyRepaintRequired, false);\n\n  this._setViewerResolution = function () {\n    // Force rendering in CSS pixel resolution instead of native device\n    // resolution which is the default since cesium1.61.0\n    // We only tweak if user hasn't specified to use useNativeResolution\n    if (!_this.terria.useNativeResolution) {\n      _this.viewer.resolutionScale = 1.0 / window.devicePixelRatio;\n    }\n  };\n\n  this._setViewerResolution();\n\n  window.addEventListener(\"resize\", this._setViewerResolution, false); // Force a repaint when the feature info box is closed.  Cesium can't close its info box\n  // when the clock is not ticking, for reasons that are not clear.\n\n  if (defined(this.viewer.infoBox)) {\n    this._removeInfoBoxCloseListener = this.viewer.infoBox.viewModel.closeClicked.addEventListener(this._boundNotifyRepaintRequired);\n  }\n\n  if (defined(this.viewer._clockViewModel)) {\n    var clock = this.viewer._clockViewModel;\n    this._shouldAnimateSubscription = knockout.getObservable(clock, \"shouldAnimate\").subscribe(this._boundNotifyRepaintRequired);\n    this._currentTimeSubscription = knockout.getObservable(clock, \"currentTime\").subscribe(this._boundNotifyRepaintRequired);\n  }\n\n  if (defined(this.viewer.timeline)) {\n    this.viewer.timeline.addEventListener(\"settime\", this._boundNotifyRepaintRequired, false);\n  }\n\n  this._selectedFeatureSubscription = knockout.getObservable(this.terria, \"selectedFeature\").subscribe(function () {\n    selectFeature(this);\n  }, this);\n  this._splitterPositionSubscription = knockout.getObservable(this.terria, \"splitPosition\").subscribe(function () {\n    if (this.scene) {\n      this.scene.imagerySplitPosition = this.terria.splitPosition;\n      this.notifyRepaintRequired();\n    }\n  }, this);\n  this._showSplitterSubscription = knockout.getObservable(terria, \"showSplitter\").subscribe(function () {\n    this.updateAllItemsForSplitter();\n  }, this); // Hacky way to force a repaint when an async load request completes\n\n  var that = this;\n  this._originalLoadWithXhr = loadWithXhr.load;\n\n  loadWithXhr.load = function (url, responseType, method, data, headers, deferred, overrideMimeType, preferText, timeout) {\n    deferred.promise.always(that._boundNotifyRepaintRequired);\n\n    that._originalLoadWithXhr(url, responseType, method, data, headers, deferred, overrideMimeType, preferText, timeout);\n  }; // Hacky way to force a repaint when a web worker sends something back.\n\n\n  this._originalScheduleTask = TaskProcessor.prototype.scheduleTask;\n\n  TaskProcessor.prototype.scheduleTask = function (parameters, transferableObjects) {\n    var result = that._originalScheduleTask.call(this, parameters, transferableObjects);\n\n    if (!defined(this._originalWorkerMessageSinkRepaint)) {\n      this._originalWorkerMessageSinkRepaint = this._worker.onmessage;\n      var taskProcessor = this;\n\n      this._worker.onmessage = function (event) {\n        taskProcessor._originalWorkerMessageSinkRepaint(event);\n\n        if (that.isDestroyed()) {\n          taskProcessor._worker.onmessage = taskProcessor._originalWorkerMessageSinkRepaint;\n          taskProcessor._originalWorkerMessageSinkRepaint = undefined;\n        } else {\n          that.notifyRepaintRequired();\n        }\n      };\n    }\n\n    return result;\n  };\n\n  this.eventHelper = new EventHelper(); // If the render loop crashes, inform the user and then switch to 2D.\n\n  this.eventHelper.add(this.scene.renderError, function (scene, error) {\n    this.terria.error.raiseEvent(new TerriaError({\n      sender: this,\n      title: \"Error rendering in 3D\",\n      message: \"\\\n<p>An error occurred while rendering in 3D.  This probably indicates a bug in \" + terria.appName + \" or an incompatibility with your system \\\nor web browser.  We'll now switch you to 2D so that you can continue your work.  We would appreciate it if you report this \\\nerror by sending an email to <a href=\\\"mailto:\" + terria.supportEmail + '\">' + terria.supportEmail + \"</a> with the \\\ntechnical details below.  Thank you!</p><pre>\" + formatError(error) + \"</pre>\"\n    }));\n    this.terria.viewerMode = ViewerMode.Leaflet;\n  }, this);\n  this.eventHelper.add(this.scene.globe.tileLoadProgressEvent, this.updateTilesLoadingCount.bind(this));\n  selectFeature(this);\n};\n\ninherit(GlobeOrMap, Cesium);\n\nCesium.prototype.destroy = function () {\n  if (defined(this._selectionIndicator)) {\n    this._selectionIndicator.destroy();\n\n    this._selectionIndicator = undefined;\n  }\n\n  if (defined(this._removePostRenderListener)) {\n    this._removePostRenderListener();\n\n    this._removePostRenderListener = undefined;\n  }\n\n  if (defined(this._removeInfoBoxCloseListener)) {\n    this._removeInfoBoxCloseListener();\n  }\n\n  if (defined(this._shouldAnimateSubscription)) {\n    this._shouldAnimateSubscription.dispose();\n\n    this._shouldAnimateSubscription = undefined;\n  }\n\n  if (defined(this._currentTimeSubscription)) {\n    this._currentTimeSubscription.dispose();\n\n    this._currentTimeSubscription = undefined;\n  }\n\n  if (defined(this.viewer.timeline)) {\n    this.viewer.timeline.removeEventListener(\"settime\", this._boundNotifyRepaintRequired, false);\n  }\n\n  if (defined(this._selectedFeatureSubscription)) {\n    this._selectedFeatureSubscription.dispose();\n\n    this._selectedFeatureSubscription = undefined;\n  }\n\n  if (defined(this._splitterPositionSubscription)) {\n    this._splitterPositionSubscription.dispose();\n\n    this._splitterPositionSubscription = undefined;\n  }\n\n  if (defined(this._showSplitterSubscription)) {\n    this._showSplitterSubscription.dispose();\n\n    this._showSplitterSubscription = undefined;\n  }\n\n  this.viewer.canvas.removeEventListener(\"mousemove\", this._boundNotifyRepaintRequired, false);\n  this.viewer.canvas.removeEventListener(\"mousedown\", this._boundNotifyRepaintRequired, false);\n  this.viewer.canvas.removeEventListener(\"mouseup\", this._boundNotifyRepaintRequired, false);\n  this.viewer.canvas.removeEventListener(\"touchstart\", this._boundNotifyRepaintRequired, false);\n  this.viewer.canvas.removeEventListener(\"touchend\", this._boundNotifyRepaintRequired, false);\n  this.viewer.canvas.removeEventListener(\"touchmove\", this._boundNotifyRepaintRequired, false);\n\n  if (defined(window.PointerEvent)) {\n    this.viewer.canvas.removeEventListener(\"pointerdown\", this._boundNotifyRepaintRequired, false);\n    this.viewer.canvas.removeEventListener(\"pointerup\", this._boundNotifyRepaintRequired, false);\n    this.viewer.canvas.removeEventListener(\"pointermove\", this._boundNotifyRepaintRequired, false);\n  }\n\n  this.viewer.canvas.removeEventListener(this._wheelEvent, this._boundNotifyRepaintRequired, false);\n  window.removeEventListener(\"resize\", this._boundNotifyRepaintRequired, false);\n  window.removeEventListener(\"resize\", this._setViewerResolution, false);\n  loadWithXhr.load = this._originalLoadWithXhr;\n  TaskProcessor.prototype.scheduleTask = this._originalScheduleTask;\n  this.eventHelper.removeAll();\n  GlobeOrMap.disposeCommonListeners(this);\n  return destroyObject(this);\n};\n\nCesium.prototype.isDestroyed = function () {\n  return false;\n};\n\nvar cartesian3Scratch = new Cartesian3();\nvar enuToFixedScratch = new Matrix4();\nvar southwestScratch = new Cartesian3();\nvar southeastScratch = new Cartesian3();\nvar northeastScratch = new Cartesian3();\nvar northwestScratch = new Cartesian3();\nvar southwestCartographicScratch = new Cartographic();\nvar southeastCartographicScratch = new Cartographic();\nvar northeastCartographicScratch = new Cartographic();\nvar northwestCartographicScratch = new Cartographic();\n/**\n * Gets the current extent of the camera.  This may be approximate if the viewer does not have a strictly rectangular view.\n * @return {Rectangle} The current visible extent.\n */\n\nCesium.prototype.getCurrentExtent = function () {\n  var scene = this.scene;\n  var camera = scene.camera;\n  var width = scene.canvas.clientWidth;\n  var height = scene.canvas.clientHeight;\n  var centerOfScreen = new Cartesian2(width / 2.0, height / 2.0);\n  var pickRay = scene.camera.getPickRay(centerOfScreen);\n  var center = scene.globe.pick(pickRay, scene);\n\n  if (!defined(center)) {\n    // TODO: binary search to find the horizon point and use that as the center.\n    return this.terria.homeView.rectangle;\n  }\n\n  var ellipsoid = this.scene.globe.ellipsoid;\n  var fovy = scene.camera.frustum.fovy * 0.5;\n  var fovx = Math.atan(Math.tan(fovy) * scene.camera.frustum.aspectRatio);\n  var cameraOffset = Cartesian3.subtract(camera.positionWC, center, cartesian3Scratch);\n  var cameraHeight = Cartesian3.magnitude(cameraOffset);\n  var xDistance = cameraHeight * Math.tan(fovx);\n  var yDistance = cameraHeight * Math.tan(fovy);\n  var southwestEnu = new Cartesian3(-xDistance, -yDistance, 0.0);\n  var southeastEnu = new Cartesian3(xDistance, -yDistance, 0.0);\n  var northeastEnu = new Cartesian3(xDistance, yDistance, 0.0);\n  var northwestEnu = new Cartesian3(-xDistance, yDistance, 0.0);\n  var enuToFixed = Transforms.eastNorthUpToFixedFrame(center, ellipsoid, enuToFixedScratch);\n  var southwest = Matrix4.multiplyByPoint(enuToFixed, southwestEnu, southwestScratch);\n  var southeast = Matrix4.multiplyByPoint(enuToFixed, southeastEnu, southeastScratch);\n  var northeast = Matrix4.multiplyByPoint(enuToFixed, northeastEnu, northeastScratch);\n  var northwest = Matrix4.multiplyByPoint(enuToFixed, northwestEnu, northwestScratch);\n  var southwestCartographic = ellipsoid.cartesianToCartographic(southwest, southwestCartographicScratch);\n  var southeastCartographic = ellipsoid.cartesianToCartographic(southeast, southeastCartographicScratch);\n  var northeastCartographic = ellipsoid.cartesianToCartographic(northeast, northeastCartographicScratch);\n  var northwestCartographic = ellipsoid.cartesianToCartographic(northwest, northwestCartographicScratch); // Account for date-line wrapping\n\n  if (southeastCartographic.longitude < southwestCartographic.longitude) {\n    southeastCartographic.longitude += CesiumMath.TWO_PI;\n  }\n\n  if (northeastCartographic.longitude < northwestCartographic.longitude) {\n    northeastCartographic.longitude += CesiumMath.TWO_PI;\n  }\n\n  var rect = new Rectangle(CesiumMath.convertLongitudeRange(Math.min(southwestCartographic.longitude, northwestCartographic.longitude)), Math.min(southwestCartographic.latitude, southeastCartographic.latitude), CesiumMath.convertLongitudeRange(Math.max(northeastCartographic.longitude, southeastCartographic.longitude)), Math.max(northeastCartographic.latitude, northwestCartographic.latitude));\n  rect.center = center;\n  return rect;\n};\n/**\n * Gets the current container element.\n * @return {Element} The current container element.\n */\n\n\nCesium.prototype.getContainer = function () {\n  return this.viewer.container;\n};\n/**\n * Zooms to a specified camera view or extent with a smooth flight animation.\n *\n * @param {CameraView|Rectangle|DataSource|Cesium3DTileset} target The view, extent, DataSource, or Cesium3DTileset to which to zoom.\n * @param {Number} [flightDurationSeconds=3.0] The length of the flight animation in seconds.\n */\n\n\nCesium.prototype.zoomTo = function (target, flightDurationSeconds) {\n  if (!defined(target)) {\n    throw new DeveloperError(\"target is required.\");\n  }\n\n  flightDurationSeconds = defaultValue(flightDurationSeconds, 3.0);\n  var that = this;\n  that.lastTarget = target;\n  return when().then(function () {\n    if (target instanceof Rectangle) {\n      var camera = that.scene.camera; // Work out the destination that the camera would naturally fly to\n\n      var destinationCartesian = camera.getRectangleCameraCoordinates(target);\n      var destination = Ellipsoid.WGS84.cartesianToCartographic(destinationCartesian);\n      var terrainProvider = that.scene.globe.terrainProvider;\n      var level = 6; // A sufficiently coarse tile level that still has approximately accurate height\n\n      var positions = [Rectangle.center(target)]; // Perform an elevation query at the centre of the rectangle\n\n      return sampleTerrain(terrainProvider, level, positions).then(function (results) {\n        if (that.lastTarget !== target) {\n          return;\n        } // Add terrain elevation to camera altitude\n\n\n        var finalDestinationCartographic = {\n          longitude: destination.longitude,\n          latitude: destination.latitude,\n          height: destination.height + results[0].height\n        };\n        var finalDestination = Ellipsoid.WGS84.cartographicToCartesian(finalDestinationCartographic);\n        camera.flyTo({\n          duration: flightDurationSeconds,\n          destination: finalDestination\n        });\n      });\n    } else if (defined(target.entities)) {\n      // Zooming to a DataSource\n      if (target.isLoading && defined(target.loadingEvent)) {\n        var deferred = when.defer();\n        var removeEvent = target.loadingEvent.addEventListener(function () {\n          removeEvent();\n          deferred.resolve();\n        });\n        return deferred.promise.then(function () {\n          if (that.lastTarget !== target) {\n            return;\n          }\n\n          return zoomToDataSource(that, target, flightDurationSeconds);\n        });\n      }\n\n      return zoomToDataSource(that, target);\n    } else if (defined(target.readyPromise)) {\n      return target.readyPromise.then(function () {\n        if (defined(target.boundingSphere) && that.lastTarget === target) {\n          zoomToBoundingSphere(that, target, flightDurationSeconds);\n        }\n      });\n    } else if (defined(target.boundingSphere)) {\n      return zoomToBoundingSphere(that, target);\n    } else if (defined(target.position)) {\n      that.scene.camera.flyTo({\n        duration: flightDurationSeconds,\n        destination: target.position,\n        orientation: {\n          direction: target.direction,\n          up: target.up\n        }\n      });\n    } else {\n      that.scene.camera.flyTo({\n        duration: flightDurationSeconds,\n        destination: target.rectangle\n      });\n    }\n  }).then(function () {\n    that.notifyRepaintRequired();\n  });\n};\n\nvar boundingSphereScratch = new BoundingSphere();\n\nfunction zoomToDataSource(cesium, target, flightDurationSeconds) {\n  return pollToPromise(function () {\n    var dataSourceDisplay = cesium.dataSourceDisplay;\n    var entities = target.entities.values;\n    var boundingSpheres = [];\n\n    for (var i = 0, len = entities.length; i < len; i++) {\n      var state = BoundingSphereState.PENDING;\n\n      try {\n        state = dataSourceDisplay.getBoundingSphere(entities[i], false, boundingSphereScratch);\n      } catch (e) {}\n\n      if (state === BoundingSphereState.PENDING) {\n        return false;\n      } else if (state !== BoundingSphereState.FAILED) {\n        boundingSpheres.push(BoundingSphere.clone(boundingSphereScratch));\n      }\n    }\n\n    var boundingSphere = BoundingSphere.fromBoundingSpheres(boundingSpheres);\n    cesium.scene.camera.flyToBoundingSphere(boundingSphere, {\n      duration: flightDurationSeconds\n    });\n    return true;\n  }, {\n    pollInterval: 100,\n    timeout: 5000\n  });\n}\n\nfunction zoomToBoundingSphere(cesium, target, flightDurationSeconds) {\n  var boundingSphere = target.boundingSphere;\n  var modelMatrix = target.modelMatrix;\n\n  if (modelMatrix) {\n    boundingSphere = BoundingSphere.transform(boundingSphere, modelMatrix);\n  }\n\n  cesium.scene.camera.flyToBoundingSphere(boundingSphere, {\n    offset: new HeadingPitchRange(0.0, -0.5, boundingSphere.radius),\n    duration: flightDurationSeconds\n  });\n}\n/**\n * Captures a screenshot of the map.\n * @return {Promise} A promise that resolves to a data URL when the screenshot is ready.\n */\n\n\nCesium.prototype.captureScreenshot = function () {\n  var deferred = when.defer();\n  var removeCallback = this.scene.postRender.addEventListener(function () {\n    removeCallback();\n\n    try {\n      var cesiumCanvas = this.scene.canvas; // If we're using the splitter, draw the split position as a vertical white line.\n\n      var canvas = cesiumCanvas;\n\n      if (this.terria.showSplitter) {\n        canvas = document.createElement(\"canvas\");\n        canvas.width = cesiumCanvas.width;\n        canvas.height = cesiumCanvas.height;\n        var context = canvas.getContext(\"2d\");\n        context.drawImage(cesiumCanvas, 0, 0);\n        var x = this.terria.splitPosition * cesiumCanvas.width;\n        context.strokeStyle = this.terria.baseMapContrastColor;\n        context.beginPath();\n        context.moveTo(x, 0);\n        context.lineTo(x, cesiumCanvas.height);\n        context.stroke();\n      }\n\n      deferred.resolve(canvas.toDataURL(\"image/png\"));\n    } catch (e) {\n      deferred.reject(e);\n    }\n  }, this);\n  this.scene.render(this.terria.clock.currentTime);\n  return deferred.promise;\n};\n/**\n * Notifies the viewer that a repaint is required.\n */\n\n\nCesium.prototype.notifyRepaintRequired = function () {\n  if (this.verboseRendering && !this.viewer.useDefaultRenderLoop) {\n    console.log(\"starting rendering @ \" + getTimestamp());\n  }\n\n  this._lastCameraMoveTime = getTimestamp();\n  this.viewer.useDefaultRenderLoop = true;\n};\n/**\n * Computes the screen position of a given world position.\n * @param  {Cartesian3} position The world position in Earth-centered Fixed coordinates.\n * @param  {Cartesian2} [result] The instance to which to copy the result.\n * @return {Cartesian2} The screen position, or undefined if the position is not on the screen.\n */\n\n\nCesium.prototype.computePositionOnScreen = function (position, result) {\n  return SceneTransforms.wgs84ToWindowCoordinates(this.scene, position, result);\n};\n/**\n * Adds an attribution to the globe.\n * @param {Credit} attribution The attribution to add.\n */\n\n\nCesium.prototype.addAttribution = function (attribution) {\n  if (attribution) {\n    this.scene.frameState.creditDisplay.addDefaultCredit(attribution);\n  }\n};\n/**\n * Removes an attribution from the globe.\n * @param {Credit} attribution The attribution to remove.\n */\n\n\nCesium.prototype.removeAttribution = function (attribution) {\n  if (attribution) {\n    this.scene.frameState.creditDisplay.removeDefaultCredit(attribution);\n  }\n};\n/**\n * Gets all attribution currently active on the globe or map.\n * @returns {String[]} The list of current attributions, as HTML strings.\n */\n\n\nCesium.prototype.getAllAttribution = function () {\n  var credits = this.scene.frameState.creditDisplay._currentFrameCredits.screenCredits.values.concat(this.scene.frameState.creditDisplay._currentFrameCredits.lightboxCredits.values);\n\n  return credits.map(function (credit) {\n    return credit.html;\n  });\n};\n/**\n * Updates the order of layers, moving layers where {@link CatalogItem#keepOnTop} is true to the top.\n */\n\n\nCesium.prototype.updateLayerOrderToKeepOnTop = function () {\n  // move alwaysOnTop layers to the top\n  var items = this.terria.nowViewing.items;\n  var scene = this.scene;\n\n  for (var l = items.length - 1; l >= 0; l--) {\n    if (items[l].imageryLayer && items[l].keepOnTop) {\n      scene.imageryLayers.raiseToTop(items[l].imageryLayer);\n    }\n  }\n};\n\nCesium.prototype.updateLayerOrderAfterReorder = function () {// because this Cesium model does the reordering via raise and lower, no action needed.\n}; // useful for counting the number of items in composite and non-composite items\n\n\nfunction countNumberOfSubItems(item) {\n  if (defined(item.items)) {\n    return item.items.length;\n  } else {\n    return 1;\n  }\n}\n/**\n * Raise an item's level in the viewer\n * This does not check that index is valid\n * @param {Number} index The index of the item to raise\n */\n\n\nCesium.prototype.raise = function (index) {\n  var items = this.terria.nowViewing.items;\n  var item = items[index];\n  var itemAbove = items[index - 1];\n\n  if (!defined(itemAbove.items) && !defined(itemAbove.imageryLayer)) {\n    return;\n  } // Both item and itemAbove may either have a single imageryLayer, or be a composite item\n  // Composite items have an items array of further items.\n  // Define n as the number of subitems in ItemAbove (1 except for composites)\n  // if item is a composite, then raise each subitem in item n times,\n  // starting with the one at the top - which is the last one in the list\n  // if item is not a composite, just raise the item n times directly.\n\n\n  var n = countNumberOfSubItems(itemAbove);\n  var i, j, subItem;\n\n  if (defined(item.items)) {\n    for (i = item.items.length - 1; i >= 0; --i) {\n      subItem = item.items[i];\n\n      if (defined(subItem.imageryLayer)) {\n        for (j = 0; j < n; ++j) {\n          this.scene.imageryLayers.raise(subItem.imageryLayer);\n        }\n      }\n    }\n  }\n\n  if (!defined(item.imageryLayer)) {\n    return;\n  }\n\n  for (j = 0; j < n; ++j) {\n    this.scene.imageryLayers.raise(item.imageryLayer);\n  }\n};\n/**\n * Lower an item's level in the viewer\n * This does not check that index is valid\n * @param {Number} index The index of the item to lower\n */\n\n\nCesium.prototype.lower = function (index) {\n  var items = this.terria.nowViewing.items;\n  var item = items[index];\n  var itemBelow = items[index + 1];\n\n  if (!defined(itemBelow.items) && !defined(itemBelow.imageryLayer)) {\n    return;\n  } // same considerations as above, but lower composite subitems starting at the other end of the list\n\n\n  var n = countNumberOfSubItems(itemBelow);\n  var i, j, subItem;\n\n  if (defined(item.items)) {\n    for (i = 0; i < item.items.length; ++i) {\n      subItem = item.items[i];\n\n      if (defined(subItem.imageryLayer)) {\n        for (j = 0; j < n; ++j) {\n          this.scene.imageryLayers.lower(subItem.imageryLayer);\n        }\n      }\n    }\n  }\n\n  if (!defined(item.imageryLayer)) {\n    return;\n  }\n\n  for (j = 0; j < n; ++j) {\n    this.scene.imageryLayers.lower(item.imageryLayer);\n  }\n};\n/**\n * Lowers this imagery layer to the bottom, underneath all other layers.  If this item is not enabled or not shown,\n * this method does nothing.\n * @param {CatalogItem} item The item to lower to the bottom (usually a basemap)\n */\n\n\nCesium.prototype.lowerToBottom = function (item) {\n  if (defined(item.items)) {\n    // the front item is at the end of the list.\n    // so to preserve order of any subitems, send any subitems to the bottom in order from the front\n    for (var i = item.items.length - 1; i >= 0; --i) {\n      var subItem = item.items[i];\n      this.lowerToBottom(subItem); // recursive\n    }\n  }\n\n  if (!defined(item._imageryLayer)) {\n    return;\n  }\n\n  this.terria.cesium.scene.imageryLayers.lowerToBottom(item._imageryLayer);\n};\n\nCesium.prototype.adjustDisclaimer = function () {};\n/**\n * Picks features based off a latitude, longitude and (optionally) height.\n * @param {Object} latlng The position on the earth to pick.\n * @param {Object} imageryLayerCoords A map of imagery provider urls to the coords used to get features for those imagery\n *     providers - i.e. x, y, level\n * @param existingFeatures An optional list of existing features to concatenate the ones found from asynchronous picking to.\n */\n\n\nCesium.prototype.pickFromLocation = function (latlng, imageryLayerCoords, existingFeatures) {\n  var pickPosition = this.scene.globe.ellipsoid.cartographicToCartesian(Cartographic.fromDegrees(latlng.lng, latlng.lat, latlng.height));\n  var pickPositionCartographic = Ellipsoid.WGS84.cartesianToCartographic(pickPosition);\n  var promises = [];\n  var imageryLayers = [];\n\n  for (var i = this.scene.imageryLayers.length - 1; i >= 0; i--) {\n    var imageryLayer = this.scene.imageryLayers.get(i);\n    var imageryProvider = imageryLayer._imageryProvider;\n\n    if (imageryProvider.url && imageryLayerCoords[imageryProvider.url]) {\n      var coords = imageryLayerCoords[imageryProvider.url];\n      promises.push(imageryProvider.pickFeatures(coords.x, coords.y, coords.level, pickPositionCartographic.longitude, pickPositionCartographic.latitude));\n      imageryLayers.push(imageryLayer);\n    }\n  }\n\n  var result = this._buildPickedFeatures(imageryLayerCoords, pickPosition, existingFeatures, promises, imageryLayers, pickPositionCartographic.height);\n\n  var mapInteractionModeStack = this.terria.mapInteractionModeStack;\n\n  if (defined(mapInteractionModeStack) && mapInteractionModeStack.length > 0) {\n    mapInteractionModeStack[mapInteractionModeStack.length - 1].pickedFeatures = result;\n  } else {\n    this.terria.pickedFeatures = result;\n  }\n};\n/**\n * Picks features based on coordinates relative to the Cesium window. Will draw a ray from the camera through the point\n * specified and set terria.pickedFeatures based on this.\n *\n * @param {Cartesian3} screenPosition The position on the screen.\n */\n\n\nCesium.prototype.pickFromScreenPosition = function (screenPosition) {\n  var pickRay = this.scene.camera.getPickRay(screenPosition);\n  var pickPosition = this.scene.globe.pick(pickRay, this.scene);\n  var pickPositionCartographic = Ellipsoid.WGS84.cartesianToCartographic(pickPosition);\n  var vectorFeatures = this.pickVectorFeatures(screenPosition);\n\n  var providerCoords = this._attachProviderCoordHooks();\n\n  var pickRasterPromise = this.scene.imageryLayers.pickImageryLayerFeatures(pickRay, this.scene);\n\n  var result = this._buildPickedFeatures(providerCoords, pickPosition, vectorFeatures, [pickRasterPromise], undefined, pickPositionCartographic.height);\n\n  var mapInteractionModeStack = this.terria.mapInteractionModeStack;\n\n  if (defined(mapInteractionModeStack) && mapInteractionModeStack.length > 0) {\n    mapInteractionModeStack[mapInteractionModeStack.length - 1].pickedFeatures = result;\n  } else {\n    this.terria.pickedFeatures = result;\n  }\n};\n/**\n * Picks all *vector* features (e.g. GeoJSON) shown at a certain position on the screen, ignoring raster features\n * (e.g. WFS). Because all vector features are already in memory, this is synchronous.\n *\n * @param {Cartesian2} screenPosition position on the screen to look for features\n * @returns {Feature[]} The features found.\n */\n\n\nCesium.prototype.pickVectorFeatures = function (screenPosition) {\n  // Pick vector features\n  var vectorFeatures = [];\n  var pickedList = this.scene.drillPick(screenPosition);\n\n  for (var i = 0; i < pickedList.length; ++i) {\n    var picked = pickedList[i];\n    var id = picked.id;\n\n    if (id && id.entityCollection && id.entityCollection.owner && id.entityCollection.owner.name === GlobeOrMap._featureHighlightName) {\n      continue;\n    }\n\n    if (!defined(id) && defined(picked.primitive)) {\n      id = picked.primitive.id;\n    }\n\n    if (id instanceof Entity && vectorFeatures.indexOf(id) === -1) {\n      var feature = Feature.fromEntityCollectionOrEntity(id);\n      vectorFeatures.push(feature);\n    } else if (picked.primitive && picked.primitive._catalogItem && picked.primitive._catalogItem.getFeaturesFromPickResult) {\n      var result = picked.primitive._catalogItem.getFeaturesFromPickResult(screenPosition, picked);\n\n      if (result) {\n        if (Array.isArray(result)) {\n          vectorFeatures.push.apply(vectorFeatures, _toConsumableArray(result));\n        } else {\n          vectorFeatures.push(result);\n        }\n      }\n    }\n  }\n\n  return vectorFeatures;\n};\n/**\n * Hooks into the {@link ImageryProvider#pickFeatures} method of every imagery provider in the scene - when this method is\n * evaluated (usually as part of feature picking), it will record the tile coordinates used against the url of the\n * imagery provider in an object that is returned by this method. Hooks are removed immediately after being executed once.\n *\n * @returns {{x, y, level}} A map of urls to the coords used by the imagery provider when picking features. Will\n *     initially be empty but will be updated as the hooks are evaluated.\n * @private\n */\n\n\nCesium.prototype._attachProviderCoordHooks = function () {\n  var providerCoords = {};\n\n  var pickFeaturesHook = function pickFeaturesHook(imageryProvider, oldPick, x, y, level, longitude, latitude) {\n    var featuresPromise = oldPick.call(imageryProvider, x, y, level, longitude, latitude); // Use url to uniquely identify providers because what else can we do?\n\n    if (imageryProvider.url) {\n      providerCoords[imageryProvider.url] = {\n        x: x,\n        y: y,\n        level: level\n      };\n    }\n\n    imageryProvider.pickFeatures = oldPick;\n    return featuresPromise;\n  };\n\n  for (var j = 0; j < this.scene.imageryLayers.length; j++) {\n    var imageryProvider = this.scene.imageryLayers.get(j).imageryProvider;\n    imageryProvider.pickFeatures = pickFeaturesHook.bind(undefined, imageryProvider, imageryProvider.pickFeatures);\n  }\n\n  return providerCoords;\n};\n/**\n * Builds a {@link PickedFeatures} object from a number of inputs.\n *\n * @param {{x, y, level}} providerCoords A map of imagery provider urls to the coords used to get features for that provider.\n * @param {Cartesian3} pickPosition The position in the 3D model that has been picked.\n * @param {Entity[]} existingFeatures Existing features - the results of feature promises will be appended to this.\n * @param {Promise[]} featurePromises Zero or more promises that each resolve to a list of {@link ImageryLayerFeatureInfo}s\n *     (usually there will be one promise per ImageryLayer. These will be combined as part of\n *     {@link PickedFeatures#allFeaturesAvailablePromise} and their results used to build the final\n *     {@link PickedFeatures#features} array.\n * @param {ImageryLayer[]} imageryLayers An array of ImageryLayers that should line up with the one passed as featurePromises.\n * @param {number} defaultHeight The height to use for feature position heights if none is available when picking.\n * @returns {PickedFeatures} A {@link PickedFeatures} object that is a combination of everything passed.\n * @private\n */\n\n\nCesium.prototype._buildPickedFeatures = function (providerCoords, pickPosition, existingFeatures, featurePromises, imageryLayers, defaultHeight) {\n  var result = new PickedFeatures();\n  result.providerCoords = providerCoords;\n  result.pickPosition = pickPosition;\n  result.allFeaturesAvailablePromise = when.all(featurePromises).then(function (allFeatures) {\n    result.isLoading = false;\n    result.features = allFeatures.reduce(function (resultFeaturesSoFar, imageryLayerFeatures, i) {\n      if (!defined(imageryLayerFeatures)) {\n        return resultFeaturesSoFar;\n      }\n\n      var features = imageryLayerFeatures.map(function (feature) {\n        if (defined(imageryLayers)) {\n          feature.imageryLayer = imageryLayers[i];\n        }\n\n        if (!defined(feature.position)) {\n          feature.position = Ellipsoid.WGS84.cartesianToCartographic(pickPosition);\n        } // If the picked feature does not have a height, use the height of the picked location.\n        // This at least avoids major parallax effects on the selection indicator.\n\n\n        if (!defined(feature.position.height) || feature.position.height === 0.0) {\n          feature.position.height = defaultHeight;\n        }\n\n        return this._createFeatureFromImageryLayerFeature(feature);\n      }.bind(this));\n\n      if (this.terria.showSplitter) {\n        // Select only features from the same side or both sides of the splitter\n        var screenPosition = this.computePositionOnScreen(result.pickPosition);\n        var pickedSide = this.terria.getSplitterSideForScreenPosition(screenPosition);\n        features = features.filter(function (feature) {\n          var splitDirection = feature.imageryLayer.splitDirection;\n          return splitDirection === pickedSide || splitDirection === ImagerySplitDirection.NONE;\n        });\n      }\n\n      return resultFeaturesSoFar.concat(features);\n    }.bind(this), defaultValue(existingFeatures, []));\n  }.bind(this)).otherwise(function () {\n    result.isLoading = false;\n    result.error = \"An unknown error occurred while picking features.\";\n  });\n  return result;\n};\n/**\n * Returns a new layer using a provided ImageryProvider, and adds it to the scene.\n * Note the optional parameters are a superset of the Leaflet version of this function, with one deletion (onProjectionError).\n *\n * @param {Object} options Options\n * @param {ImageryProvider} options.imageryProvider The imagery provider to create a new layer for.\n * @param {Number} [layerIndex] The index to add the layer at.  If omitted, the layer will added on top of all existing layers.\n * @param {Rectangle} [options.rectangle=imageryProvider.rectangle] The rectangle of the layer.  This rectangle\n *        can limit the visible portion of the imagery provider.\n * @param {Number|Function} [options.opacity=1.0] The alpha blending value of this layer, from 0.0 to 1.0.\n *                          This can either be a simple number or a function with the signature\n *                          <code>function(frameState, layer, x, y, level)</code>.  The function is passed the\n *                          current frame state, this layer, and the x, y, and level coordinates of the\n *                          imagery tile for which the alpha is required, and it is expected to return\n *                          the alpha value to use for the tile.\n * @param {Boolean} [options.clipToRectangle]\n * @param {Boolean} [options.treat403AsError]\n * @param {Boolean} [options.treat403AsError]\n * @param {Boolean} [options.ignoreUnknownTileErrors]\n * @param {Function} [options.onLoadError]\n * @returns {ImageryLayer} The newly created layer.\n */\n\n\nCesium.prototype.addImageryProvider = function (options) {\n  var scene = this.scene;\n  var errorEvent = options.imageryProvider.errorEvent;\n\n  if (defined(errorEvent)) {\n    errorEvent.addEventListener(options.onLoadError);\n  }\n\n  var result = new ImageryLayer(options.imageryProvider, {\n    show: false,\n    alpha: options.opacity,\n    rectangle: options.clipToRectangle ? options.rectangle : undefined,\n    isRequired: options.isRequiredForRendering // TODO: This doesn't seem to be a valid option for ImageryLayer - remove (and upstream)?\n\n  }); // layerIndex is an optional parameter used when the imageryLayer corresponds to a CsvCatalogItem whose selected item has just changed\n  // to ensure that the layer is re-added in the correct position\n\n  scene.imageryLayers.add(result, options.layerIndex);\n  this.updateLayerOrderToKeepOnTop();\n  return result;\n};\n\nCesium.prototype.removeImageryLayer = function (options) {\n  var scene = this.scene;\n  scene.imageryLayers.remove(options.layer);\n};\n\nCesium.prototype.showImageryLayer = function (options) {\n  options.layer.show = true;\n};\n\nCesium.prototype.hideImageryLayer = function (options) {\n  options.layer.show = false;\n};\n\nCesium.prototype.isImageryLayerShown = function (options) {\n  return options.layer.show;\n};\n\nCesium.prototype.updateItemForSplitter = function (item) {\n  if (!defined(item.splitDirection) || !defined(item.imageryLayer)) {\n    return;\n  }\n\n  var terria = item.terria;\n\n  if (terria.showSplitter) {\n    item.imageryLayer.splitDirection = item.splitDirection;\n  } else {\n    item.imageryLayer.splitDirection = ImagerySplitDirection.NONE;\n  } // Also update the next layer, if any.\n\n\n  if (item._nextLayer) {\n    item._nextLayer.splitDirection = item.imageryLayer.splitDirection;\n  }\n\n  this.notifyRepaintRequired();\n};\n\nCesium.prototype.pauseMapInteraction = function () {\n  ++this._pauseMapInteractionCount;\n\n  if (this._pauseMapInteractionCount === 1) {\n    this.scene.screenSpaceCameraController.enableInputs = false;\n  }\n};\n\nCesium.prototype.resumeMapInteraction = function () {\n  var _this2 = this;\n\n  --this._pauseMapInteractionCount;\n\n  if (this._pauseMapInteractionCount === 0) {\n    setTimeout(function () {\n      if (_this2._pauseMapInteractionCount === 0) {\n        _this2.scene.screenSpaceCameraController.enableInputs = true;\n      }\n    }, 0);\n  }\n};\n\nfunction postRender(cesium, date) {\n  // We can safely stop rendering when:\n  //  - the camera position hasn't changed in over a second,\n  //  - there are no tiles waiting to load, and\n  //  - the clock is not animating\n  //  - there are no tweens in progress\n  var now = getTimestamp();\n  var scene = cesium.scene;\n\n  if (!Matrix4.equalsEpsilon(cesium._lastCameraViewMatrix, scene.camera.viewMatrix, 1e-5)) {\n    cesium._lastCameraMoveTime = now;\n  }\n\n  var cameraMovedInLastSecond = now - cesium._lastCameraMoveTime < 1000;\n  var surface = scene.globe._surface;\n  var tilesWaiting = !surface._tileProvider.ready || surface._tileLoadQueueHigh.length > 0 || surface._tileLoadQueueMedium.length > 0 || surface._tileLoadQueueLow.length > 0 || surface._debug.tilesWaitingForChildren > 0;\n\n  if (!cameraMovedInLastSecond && !tilesWaiting && !cesium.viewer.clock.shouldAnimate && cesium.scene.tweens.length === 0) {\n    if (cesium.verboseRendering) {\n      console.log(\"stopping rendering @ \" + getTimestamp());\n    }\n\n    cesium.viewer.useDefaultRenderLoop = false;\n    cesium.stoppedRendering = true;\n  }\n\n  Matrix4.clone(scene.camera.viewMatrix, cesium._lastCameraViewMatrix);\n  var feature = cesium.terria.selectedFeature;\n\n  if (defined(feature)) {\n    var position;\n\n    if (defined(cesium.dataSourceDisplay)) {\n      var originalEntity = defined(feature.cesiumEntity) ? feature.cesiumEntity : feature;\n      var state = cesium.dataSourceDisplay.getBoundingSphere(originalEntity, true, boundingSphereScratch);\n\n      if (state === BoundingSphereState.DONE) {\n        position = Cartesian3.clone(boundingSphereScratch.center);\n      }\n    }\n\n    if (!defined(position) && defined(feature.position)) {\n      position = feature.position.getValue(cesium.terria.clock.currentTime);\n    }\n\n    if (defined(position)) {\n      cesium._selectionIndicator.position = position;\n    }\n  }\n\n  cesium._selectionIndicator.update();\n}\n\nfunction selectFeature(cesium) {\n  var feature = cesium.terria.selectedFeature;\n\n  cesium._highlightFeature(feature);\n\n  if (defined(feature) && defined(feature.position)) {\n    cesium._selectionIndicator.position = feature.position.getValue(cesium.terria.clock.currentTime);\n\n    cesium._selectionIndicator.animateAppear();\n  } else {\n    cesium._selectionIndicator.animateDepart();\n  }\n\n  cesium._selectionIndicator.update();\n}\n\nmodule.exports = Cesium;"],"sourceRoot":""}